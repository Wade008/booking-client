{
  "openapi": "3.0.3",
  "info": {
    "title": "Cliniko API",
    "description": "This is the official API for Cliniko. Cliniko is a practice management system for healthcare practitioners.\n\nThe Cliniko API is based on REST principles. This means you can use any HTTP client and any programming language to interact with the API.\n\nJSON will be returned in all responses from the API.\n",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://api.au1.cliniko.com/v1",
      "description": "Production"
    }
  ],
  "externalDocs": {
    "description": "Clinko API Developers Group",
    "url": "https://groups.google.com/a/redguava.com.au/d/forum/cliniko-api"
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "responses": {
      "ValidationError": {
        "description": "Resource could not be saved due to validation errors",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Validation Failed"
                },
                "errors": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "x-additionalPropertiesName": "error field"
                  },
                  "example": {
                    "api_field": "error message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "Page": {
        "in": "query",
        "name": "page",
        "schema": {
          "type": "integer"
        }
      },
      "PerPage": {
        "in": "query",
        "name": "per_page",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        }
      },
      "Sort": {
        "in": "query",
        "name": "sort",
        "explode": false,
        "description": "Comma separated search fields. See: [Ordering](/developer-portal#ordering)",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "created_at:desc"
          }
        }
      },
      "Order": {
        "in": "query",
        "name": "order",
        "deprecated": true,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      }
    },
    "schemas": {
      "AppointmentType": {
        "type": "object",
        "properties": {
          "add_deposit_to_account_credit": {
            "type": "boolean",
            "nullable": true
          },
          "appointment_confirmation_template_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64",
              "example": "1"
            },
            "nullable": true
          },
          "appointment_reminder_template_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64",
              "example": "1"
            },
            "nullable": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billable_item": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/billable_items/1"
                  }
                }
              }
            }
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deposit_price": {
            "type": "string",
            "format": "decimal",
            "minimum": 0,
            "maximum": 4000000000,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "duration_in_minutes": {
            "type": "integer",
            "minimum": 0,
            "maximum": 1440,
            "exclusiveMinimum": true,
            "exclusiveMaximum": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/appointment_types/1"
              }
            }
          },
          "max_attendees": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "exclusiveMinimum": true,
            "exclusiveMaximum": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "online_bookings_lead_time_hours": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              4,
              12,
              18,
              24,
              48,
              72,
              168,
              336,
              504,
              672
            ],
            "nullable": true
          },
          "online_payments_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "online_payments_mode": {
            "type": "string",
            "enum": [
              "deposit_required",
              "optional",
              "required"
            ],
            "nullable": true
          },
          "practitioners": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners"
                  }
                }
              }
            }
          },
          "product": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/products/1"
                  }
                }
              }
            }
          },
          "show_in_online_bookings": {
            "type": "boolean",
            "nullable": true
          },
          "telehealth_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "treatment_note_template": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/treatment_note_templates/1"
                  }
                }
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Appointment Type"
        ]
      },
      "AttachmentPresignedPost": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "nullable": true,
            "properties": {
              "key": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "x-amz-credential": {
                "type": "string"
              },
              "x-amz-signature": {
                "type": "string"
              },
              "x-amz-algorithm": {
                "type": "string"
              },
              "success_action_status": {
                "type": "string",
                "format": "integer",
                "enum": [
                  "201"
                ]
              },
              "acl": {
                "type": "string",
                "enum": [
                  "private"
                ]
              }
            }
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "x-tags": [
          "Patient Attachment"
        ]
      },
      "Attendee": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arrived": {
            "type": "boolean",
            "nullable": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/bookings/1"
                  }
                }
              }
            }
          },
          "booking_ip_address": {
            "type": "string",
            "format": "ipv4",
            "example": "10.0.0.43",
            "nullable": true
          },
          "cancellation_note": {
            "type": "string",
            "nullable": true
          },
          "cancellation_reason": {
            "type": "integer",
            "nullable": true
          },
          "cancellation_reason_description": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Feeling Better",
              "Condition Worse",
              "Sick",
              "COVID-19 related",
              "Away",
              "Other",
              "Work",
              ""
            ]
          },
          "cancellation_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email_reminder_sent": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice_status": {
            "type": "integer",
            "nullable": true,
            "description": "| Enum Value | Description |\n|---|---|\n|10|Open|\n|20|Paid|\n|30|Closed|\n|40|Open credit|\n",
            "enum": [
              10,
              20,
              30,
              40
            ]
          },
          "invoices": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/attendees/1/invoices"
                  }
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/attendees/1"
              }
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "online_booking_policy_accepted": {
            "type": "boolean",
            "nullable": true
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "patient_case": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_cases/1"
                  }
                }
              }
            }
          },
          "patient_forms": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/attendees/1/patient_forms"
                  }
                }
              }
            }
          },
          "sms_reminder_sent": {
            "type": "boolean",
            "nullable": true
          },
          "telehealth_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "treatment_note_status": {
            "type": "integer",
            "nullable": true,
            "description": "| Enum Value | Description |\n|---|---|\n|10|Draft|\n|90|Final|\n",
            "enum": [
              10,
              90
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Attendee"
        ]
      },
      "AvailabilityBlock": {
        "type": "object",
        "properties": {
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "ends_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/availability_blocks/1"
              }
            }
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "repeat_rule": {
            "type": "object",
            "properties": {
              "number_of_repeats": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "exclusiveMinimum": true,
                "nullable": true
              },
              "repeat_type": {
                "type": "string",
                "enum": [
                  "Daily",
                  "Monthly",
                  "Weekly"
                ],
                "nullable": true
              },
              "repeating_interval": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "exclusiveMinimum": true,
                "nullable": true
              }
            },
            "nullable": true
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Availability Block"
        ]
      },
      "BillableItem": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "item_code": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "item_type": {
            "type": "string",
            "enum": [
              "Product",
              "Service",
              "Other"
            ]
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/billable_items/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "minimum": -4000000000,
            "maximum": 4000000000,
            "exclusiveMaximum": true
          },
          "tax": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/taxes/1"
                  }
                }
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Billable Item"
        ]
      },
      "Booking": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/GroupAppointment"
          },
          {
            "$ref": "#/components/schemas/IndividualAppointment"
          },
          {
            "$ref": "#/components/schemas/UnavailableBlock"
          }
        ],
        "x-tags": [
          "Booking"
        ]
      },
      "Business": {
        "type": "object",
        "properties": {
          "additional_information": {
            "type": "string",
            "maxLength": 5000,
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "nullable": true
          },
          "appointment_reminders_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "appointment_type_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64",
              "example": "1"
            },
            "nullable": true
          },
          "appointments": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1/appointments"
                  }
                }
              }
            }
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "business_name": {
            "type": "string",
            "nullable": true
          },
          "business_registration_name": {
            "type": "string",
            "nullable": true
          },
          "business_registration_value": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "contact_information": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
            "example": "AU",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "email_reply_to": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/businesses/1"
              }
            }
          },
          "post_code": {
            "type": "string",
            "nullable": true
          },
          "practitioners": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners"
                  }
                }
              }
            }
          },
          "show_in_online_bookings": {
            "type": "boolean",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "description": "Human-readable label for a time zone. See link below for supported values.",
            "example": "Melbourne",
            "nullable": true,
            "externalDocs": {
              "description": "Time zone Support through the API",
              "url": "/developer-portal/guides/time_zone_support/"
            }
          },
          "time_zone_identifier": {
            "type": "string",
            "description": "IANA identifier for a time zone. See link below for supported values.",
            "example": "Australia/Melbourne",
            "nullable": true,
            "externalDocs": {
              "description": "Time zone Support through the API",
              "url": "/developer-portal/guides/time_zone_support/"
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "website_address": {
            "type": "string",
            "nullable": true
          }
        },
        "x-tags": [
          "Business"
        ]
      },
      "Communication": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MemoCommunication"
          },
          {
            "$ref": "#/components/schemas/EmailCommunication"
          },
          {
            "$ref": "#/components/schemas/SmsCommunication"
          }
        ],
        "x-tags": [
          "Communication"
        ]
      },
      "ConcessionType": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/concession_types/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Concession Type"
        ]
      },
      "Contact": {
        "type": "object",
        "properties": {
          "address_1": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "city": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "company_name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
            "example": "AU",
            "maxLength": 2,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "doctor_type": {
            "type": "string",
            "enum": [
              "general_practitioner",
              "specialist"
            ],
            "nullable": true
          },
          "email": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "last_name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/contacts/1"
              }
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "occupation": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          },
          "post_code": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "preferred_name": {
            "type": "string",
            "nullable": true
          },
          "provider_number": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "state": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Doctor",
              "3rd Party Payer",
              "Standard"
            ]
          },
          "type_code": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Contact"
        ]
      },
      "DailyAvailability": {
        "type": "object",
        "properties": {
          "availabilities": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "starts_at": {
                  "type": "string",
                  "format": "time",
                  "example": "09:00"
                },
                "ends_at": {
                  "type": "string",
                  "format": "time",
                  "example": "13:00"
                }
              }
            }
          },
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "day_of_week": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/daily_availabilities/1"
              }
            }
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "time_zone": {
            "type": "string",
            "description": "See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)",
            "example": "Melbourne",
            "nullable": true
          },
          "time_zone_identifier": {
            "type": "string",
            "description": "See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)",
            "example": "Australia/Melbourne",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Daily Availability"
        ]
      },
      "EmailCommunication": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendee": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/attendees/1"
                  }
                }
              }
            }
          },
          "booking": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/bookings/1"
                  }
                }
              }
            }
          },
          "category": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Account Statement",
              "Appointment Cancellation",
              "Appointment Confirmation",
              "Appointment Reminder",
              "Auth Code",
              "Bulk Email",
              "Cancelled appointment notification",
              "Completed Patient Form",
              "Invoice",
              "Letter",
              "Memo",
              "Online payment request",
              "Patient Form",
              "Patient Reply Forwarded",
              "Payment Receipt",
              "Practitioner Appointment Notification",
              "Reply from Patient",
              "Reply from Practitioner",
              "SMS Message",
              "Upcoming appointments"
            ]
          },
          "category_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | Appointment Reminder |\n| 2 | Patient Reply Forwarded |\n| 3 | Invoice |\n| 4 | Appointment Confirmation |\n| 5 | Letter |\n| 6 | Practitioner Appointment Notification |\n| 7 | SMS Message |\n| 8 | Reply from Patient |\n| 9 | Account Statement |\n| 10 | Cancelled appointment notification |\n| 11 | Auth Code |\n| 12 | Memo |\n| 13 | Reply from Practitioner |\n| 14 | Payment Receipt |\n| 15 | Bulk Email |\n| 16 | Appointment Cancellation |\n| 17 | Patient Form |\n| 18 | Upcoming appointments |\n| 19 | Completed Patient Form |\n| 20 | Online payment request |"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "content_subject": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "direction_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | Sent |\n| 2 | Received |"
          },
          "direction_description": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Received",
              "Sent"
            ]
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/invoices/1"
                  }
                }
              }
            }
          },
          "letter": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/letters/1"
                  }
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/communications/1"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/payments/1"
                  }
                }
              }
            }
          },
          "to": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Email",
              "Other",
              "Phone call",
              "SMS"
            ]
          },
          "type_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | SMS |\n| 2 | Email |\n| 3 | Phone call |\n| 4 | Other |"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Email Communication"
        ]
      },
      "FullPatientExport": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_attachments/1/content"
                  }
                }
              }
            }
          },
          "content_type": {
            "type": "string",
            "nullable": true,
            "description": "mime type",
            "example": "text/plain"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patient_attachments/1"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "pinned_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processing_completed": {
            "type": "boolean",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "user": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/users/1"
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Full Patient Export"
        ]
      },
      "GroupAppointment": {
        "type": "object",
        "properties": {
          "appointment_type": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/appointment_types/1"
                  }
                }
              }
            }
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendees": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/group_appointments/1/attendees"
                  }
                }
              }
            }
          },
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "conflicts": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/group_appointments/1/conflicts"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ends_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/group_appointments/1"
              }
            }
          },
          "max_attendees": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "exclusiveMinimum": true,
            "exclusiveMaximum": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "patient_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "int64",
              "example": "1"
            },
            "nullable": true
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "repeat_rule": {
            "type": "object",
            "properties": {
              "number_of_repeats": {
                "type": "integer",
                "minimum": 0,
                "maximum": 51,
                "exclusiveMinimum": true,
                "nullable": true
              },
              "repeat_type": {
                "type": "string",
                "enum": [
                  "Daily",
                  "Monthly",
                  "Weekly"
                ],
                "nullable": true
              },
              "repeating_interval": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "exclusiveMinimum": true,
                "nullable": true
              }
            },
            "nullable": true
          },
          "repeated_from": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/group_appointments/1"
                  }
                }
              }
            }
          },
          "repeats": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/group_appointments?q[]=repeated_from_id:=1"
                  }
                }
              }
            }
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "telehealth_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Group Appointment"
        ]
      },
      "IndividualAppointment": {
        "type": "object",
        "properties": {
          "appointment_type": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/appointment_types/1"
                  }
                }
              }
            }
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendees": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/individual_appointments/1/attendees"
                  }
                }
              }
            }
          },
          "booking_ip_address": {
            "type": "string",
            "format": "ipv4",
            "example": "10.0.0.43",
            "nullable": true
          },
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "cancellation_note": {
            "type": "string",
            "nullable": true
          },
          "cancellation_reason": {
            "type": "integer",
            "nullable": true
          },
          "cancellation_reason_description": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Feeling Better",
              "Condition Worse",
              "Sick",
              "COVID-19 related",
              "Away",
              "Other",
              "Work"
            ]
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "conflicts": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/individual_appointments/1/conflicts"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "did_not_arrive": {
            "type": "boolean",
            "nullable": true
          },
          "email_reminder_sent": {
            "type": "boolean",
            "nullable": true
          },
          "ends_at": {
            "type": "string",
            "format": "date-time"
          },
          "has_patient_appointment_notes": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice_status": {
            "type": "integer",
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/individual_appointments/1"
              }
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "online_booking_policy_accepted": {
            "type": "boolean",
            "nullable": true
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "patient_arrived": {
            "type": "boolean",
            "nullable": true
          },
          "patient_case": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_cases/1"
                  }
                }
              }
            }
          },
          "patient_name": {
            "type": "string",
            "nullable": true
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "repeat_rule": {
            "type": "object",
            "properties": {
              "number_of_repeats": {
                "type": "integer",
                "minimum": 0,
                "maximum": 51,
                "exclusiveMinimum": true,
                "nullable": true
              },
              "repeat_type": {
                "type": "string",
                "enum": [
                  "Daily",
                  "Monthly",
                  "Weekly"
                ],
                "nullable": true
              },
              "repeating_interval": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "exclusiveMinimum": true,
                "nullable": true
              }
            },
            "nullable": true
          },
          "repeated_from": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/individual_appointments/1"
                  }
                }
              }
            }
          },
          "repeats": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/individual_appointments?q[]=repeated_from_id:=1"
                  }
                }
              }
            }
          },
          "sms_reminder_sent": {
            "type": "boolean",
            "nullable": true
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "telehealth_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "treatment_note_status": {
            "type": "integer",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Individual Appointment"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "appointment": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/appointments/1"
                  }
                }
              }
            }
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "closed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discounted_amount": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice_items": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/invoices/1/invoice_items"
                  }
                }
              }
            }
          },
          "invoice_to": {
            "type": "string",
            "nullable": true
          },
          "issue_date": {
            "type": "string",
            "format": "date"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/invoices/1"
              }
            }
          },
          "net_amount": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "integer"
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "patient_extra_information": {
            "type": "string",
            "nullable": true
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "status": {
            "type": "integer",
            "nullable": true,
            "enum": [
              10,
              20,
              30,
              40
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 10 | Open |\n| 20 | Paid |\n| 30 | Closed |\n| 40 | Open credit |"
          },
          "status_description": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Open",
              "Paid",
              "Closed",
              "Open credit"
            ]
          },
          "tax_amount": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "total_amount": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Invoice"
        ]
      },
      "InvoiceItem": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "billable_item": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/billable_items/1"
                  }
                }
              }
            }
          },
          "code": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "concession_type_name": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discount_percentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "nullable": true
          },
          "discounted_amount": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/invoices/1"
                  }
                }
              }
            }
          },
          "is_monetary_discount": {
            "type": "boolean",
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/invoice_items/1"
              }
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "net_price": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "product": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/products/1"
                  }
                }
              }
            }
          },
          "quantity": {
            "type": "integer",
            "minimum": -4000000000,
            "maximum": 4000000000,
            "exclusiveMaximum": true
          },
          "tax_amount": {
            "type": "number",
            "nullable": true,
            "deprecated": true
          },
          "tax_name": {
            "type": "string",
            "nullable": true
          },
          "tax_rate": {
            "type": "number",
            "nullable": true
          },
          "total_including_tax": {
            "type": "number",
            "nullable": true
          },
          "unit_price": {
            "type": "string",
            "format": "decimal",
            "minimum": -4000000000,
            "maximum": 4000000000,
            "exclusiveMaximum": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Invoice Item"
        ]
      },
      "MedicalAlert": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/medical_alerts/1"
              }
            }
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Medical Alert"
        ]
      },
      "MemoCommunication": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Memo"
            ]
          },
          "category_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              12
            ],
            "description": "| Enum Value | Description |\n|---|---|\n|12|Memo|\n"
          },
          "confidential": {
            "type": "boolean",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "direction_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | Sent |\n| 2 | Received |"
          },
          "direction_description": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Received",
              "Sent"
            ]
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/communications/1"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "to": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Email",
              "Other",
              "Phone call",
              "SMS"
            ]
          },
          "type_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | SMS |\n| 2 | Email |\n| 3 | Phone call |\n| 4 | Other |"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Memo Communication"
        ]
      },
      "MemoCommunicationBody": {
        "type": "object",
        "properties": {
          "category_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              12
            ],
            "description": "| Enum Value | Description |\n|---|---|\n|12|Memo|\n"
          },
          "confidential": {
            "type": "boolean",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "direction_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | Sent |\n| 2 | Received |"
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "patient_id": {
            "type": "string",
            "format": "int64",
            "description": "patient id",
            "example": "1"
          },
          "to": {
            "type": "string",
            "nullable": true
          },
          "type_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | SMS |\n| 2 | Email |\n| 3 | Phone call |\n| 4 | Other |"
          }
        }
      },
      "Patient": {
        "type": "object",
        "properties": {
          "accepted_email_marketing": {
            "type": "boolean",
            "nullable": true
          },
          "accepted_privacy_policy": {
            "type": "boolean",
            "nullable": true
          },
          "accepted_sms_marketing": {
            "type": "boolean",
            "nullable": true
          },
          "address_1": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "address_2": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "address_3": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "appointment_notes": {
            "type": "string",
            "nullable": true
          },
          "appointments": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1/appointments"
                  }
                }
              }
            }
          },
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendees": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1/attendees"
                  }
                }
              }
            }
          },
          "city": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "concession_type": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/concession_types/1"
                  }
                }
              }
            }
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "custom_fields": {
            "type": "object",
            "nullable": true,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "token": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                      "nullable": false
                    },
                    "archived": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "fields": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "archived": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "token": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                            "nullable": false
                          },
                          "type": {
                            "type": "string",
                            "nullable": true
                          },
                          "options": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "archived": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "token": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                                  "nullable": false
                                },
                                "selected": {
                                  "type": "boolean",
                                  "nullable": false
                                }
                              },
                              "required": [
                                "token"
                              ]
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "archived": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "selected": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "value": {
                                "type": "string",
                                "nullable": false,
                                "maxLength": 255
                              }
                            }
                          },
                          "value": {
                            "type": "string",
                            "nullable": false
                          }
                        },
                        "required": [
                          "token"
                        ]
                      }
                    }
                  },
                  "required": [
                    "token",
                    "fields"
                  ]
                }
              }
            }
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dva_card_number": {
            "type": "string",
            "pattern": "^[NVQSWT]([A-Z ][0-9]{1,6}|[A-Z]{2}[0-9]{1,5}|[A-Z]{3}[0-9]{1,4})[A-Z]?$",
            "nullable": true
          },
          "email": {
            "type": "string",
            "pattern": "^[A-Z0-9!#$%&'*+/=?^_`{|}~.-]+@[A-Z0-9.-]+\\.[A-Z]{2,63}$",
            "maxLength": 255,
            "nullable": true
          },
          "emergency_contact": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "maxLength": 255
          },
          "gender": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "gender_identity": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice_default_to": {
            "type": "string",
            "nullable": true
          },
          "invoice_email": {
            "type": "string",
            "pattern": "^[A-Z0-9!#$%&'*+/=?^_`{|}~.-]+@[A-Z0-9.-]+\\.[A-Z]{2,63}$",
            "nullable": true
          },
          "invoice_extra_information": {
            "type": "string",
            "nullable": true
          },
          "invoices": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1/invoices"
                  }
                }
              }
            }
          },
          "label": {
            "type": "string",
            "nullable": true,
            "description": "Full name"
          },
          "last_name": {
            "type": "string",
            "maxLength": 255
          },
          "latest_booking": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/bookings/1"
                  }
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patients/1"
              }
            }
          },
          "medical_alerts": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1/medical_alerts"
                  }
                }
              }
            }
          },
          "medicare": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "medicare_reference_number": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "merged_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "merged_with_patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "occupation": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "old_reference_id": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "patient_attachments": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1/patient_attachments"
                  }
                }
              }
            }
          },
          "patient_phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          },
          "post_code": {
            "type": "string",
            "nullable": true
          },
          "preferred_first_name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "pronouns": {
            "type": "object",
            "nullable": true,
            "properties": {
              "accusative": {
                "type": "string",
                "nullable": false
              },
              "nominative": {
                "type": "string",
                "nullable": false
              },
              "predicative_possessive": {
                "type": "string",
                "nullable": false
              },
              "pronominal_possessive": {
                "type": "string",
                "nullable": false
              },
              "reflexive": {
                "type": "string",
                "nullable": false
              }
            },
            "required": [
              "accusative",
              "nominative",
              "predicative_possessive",
              "pronominal_possessive",
              "reflexive"
            ]
          },
          "receives_confirmation_emails": {
            "type": "boolean",
            "nullable": true
          },
          "referral_source": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "referring_doctor": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/contacts/1"
                  }
                }
              }
            }
          },
          "reminder_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "None",
              "SMS",
              "Email",
              "SMS & Email"
            ]
          },
          "sex": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "description": "See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)",
            "example": "Australia/Melbourne",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Patient"
        ]
      },
      "PatientAttachment": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/FullPatientExport"
          },
          {
            "$ref": "#/components/schemas/UploadedPatientAttachment"
          }
        ],
        "x-tags": [
          "Patient Attachment"
        ]
      },
      "PatientCase": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendee_ids": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "int64"
            }
          },
          "attendees": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_cases/1/attendees"
                  }
                }
              }
            }
          },
          "bookings": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_cases/1/bookings"
                  }
                }
              }
            }
          },
          "closed": {
            "type": "boolean",
            "nullable": true
          },
          "contact": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/contacts/1"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "expiry_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "include_cancelled_attendees": {
            "type": "boolean",
            "nullable": true
          },
          "include_dna_attendees": {
            "type": "boolean",
            "nullable": true
          },
          "invoices": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_cases/1/invoices"
                  }
                }
              }
            }
          },
          "issue_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patient_cases/1"
              }
            }
          },
          "max_invoiceable_amount": {
            "type": "string",
            "format": "decimal",
            "minimum": 0,
            "exclusiveMinimum": true,
            "nullable": true
          },
          "max_sessions": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200,
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "patient_attachments": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_cases/1/patient_attachments"
                  }
                }
              }
            }
          },
          "referral": {
            "type": "boolean",
            "nullable": true
          },
          "referral_type": {
            "type": "string",
            "enum": [
              "dva",
              "medicare"
            ],
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Patient Case"
        ]
      },
      "PatientForm": {
        "type": "object",
        "properties": {
          "attendee": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/attendees/1"
                  }
                }
              }
            }
          },
          "booking": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/bookings/1"
                  }
                }
              }
            }
          },
          "completed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "content": {
            "type": "object",
            "nullable": true,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 10000
                    },
                    "questions": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 255
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "checkboxes",
                              "date",
                              "paragraph",
                              "radiobuttons",
                              "signature",
                              "text"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "nullable": false
                          },
                          "signature_id": {
                            "type": "string",
                            "format": "int64",
                            "example": "1",
                            "nullable": false
                          },
                          "answer": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 10000
                          },
                          "answers": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 255
                                },
                                "selected": {
                                  "type": "boolean",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "selected": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "value": {
                                "type": "string",
                                "nullable": false,
                                "maxLength": 255
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "email_to_patient_on_completion": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patient_forms/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "restricted_to_practitioner": {
            "type": "boolean",
            "nullable": true
          },
          "signatures": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_forms/1/signatures/112233"
                  }
                }
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "x-tags": [
          "Patient Form"
        ]
      },
      "PatientFormTemplate": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "content": {
            "type": "object",
            "nullable": true,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 10000
                    },
                    "questions": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 255
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "checkboxes",
                              "date",
                              "paragraph",
                              "radiobuttons",
                              "signature",
                              "text"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "nullable": false
                          },
                          "answer": {
                            "type": "string",
                            "nullable": false
                          },
                          "answers": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 255
                                }
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": false
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "email_to_patient_on_completion": {
            "type": "boolean",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patient_form_templates/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "restricted_to_practitioner": {
            "type": "boolean",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Patient Form Template"
        ]
      },
      "PhoneNumber": {
        "type": "object",
        "properties": {
          "normalized_number": {
            "type": "string",
            "format": "phone",
            "example": "39012345678"
          },
          "number": {
            "type": "string",
            "format": "phone",
            "example": "0-123-456-78"
          },
          "phone_type": {
            "type": "string",
            "enum": [
              "Fax",
              "Home",
              "Mobile",
              "Other",
              "Work"
            ]
          }
        }
      },
      "Practitioner": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "appointment_types": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1/appointment_types"
                  }
                }
              }
            }
          },
          "appointments": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1/appointments"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "default_appointment_type": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/appointment_types/1"
                  }
                }
              }
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "designation": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoices": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1/invoices"
                  }
                }
              }
            }
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/practitioners/1"
              }
            }
          },
          "practitioner_reference_numbers": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1/practitioner_reference_numbers"
                  }
                }
              }
            }
          },
          "show_in_online_bookings": {
            "type": "boolean",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "user": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/users/1"
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Practitioner"
        ]
      },
      "PractitionerReferenceNumber": {
        "type": "object",
        "properties": {
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/practitioner_reference_numbers/1"
              }
            }
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "reference_number": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Practitioner Reference Number"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cost_price": {
            "type": "string",
            "format": "decimal",
            "minimum": 0,
            "maximum": 4000000000,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "item_code": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/products/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "price_ex_tax": {
            "type": "string",
            "format": "decimal",
            "minimum": 0,
            "maximum": 4000000000,
            "exclusiveMaximum": true
          },
          "price_including_tax": {
            "type": "string",
            "format": "decimal",
            "nullable": true
          },
          "product_supplier_name": {
            "type": "string",
            "nullable": true
          },
          "serial_number": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "stock_level": {
            "type": "integer",
            "minimum": -4000000000,
            "maximum": 4000000000,
            "exclusiveMinimum": true,
            "exclusiveMaximum": true,
            "nullable": true
          },
          "tax": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/taxes/1"
                  }
                }
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Product"
        ]
      },
      "PublicSettings": {
        "type": "object",
        "properties": {
          "account": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string",
                "format": "int64",
                "example": "1"
              },
              "name": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "country_code": {
                "type": "string",
                "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
                "example": "AU"
              },
              "currency_symbol": {
                "type": "string"
              },
              "subdomain": {
                "type": "string"
              },
              "has_time_travelers": {
                "type": "boolean"
              },
              "time_zone_support": {
                "type": "boolean"
              }
            }
          },
          "calendar": {
            "type": "object",
            "nullable": true,
            "properties": {
              "start_hour": {
                "type": "integer"
              },
              "end_hour": {
                "type": "integer"
              },
              "timeslot_height_in_pixels": {
                "type": "integer"
              },
              "timeslot_size_in_minutes": {
                "type": "integer"
              },
              "show_current_time_indicator": {
                "type": "boolean"
              },
              "multiple_appointments_gap": {
                "type": "boolean"
              }
            }
          },
          "documents_and_printing": {
            "type": "object",
            "nullable": true,
            "properties": {
              "logo_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "logo_height": {
                "type": "integer"
              }
            }
          },
          "email": {
            "type": "object",
            "nullable": true,
            "properties": {
              "patient_accept_email_marketing_by_default": {
                "type": "boolean"
              }
            }
          },
          "integrations": {
            "type": "object",
            "nullable": true,
            "properties": {
              "mail_chimp": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              },
              "xero": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "online_bookings": {
            "type": "object",
            "nullable": true,
            "properties": {
              "allow_bookings_days_in_advance": {
                "type": "integer"
              },
              "allow_online_bookings_time_zone_choice": {
                "type": "boolean"
              },
              "booking_reservation_minutes": {
                "type": "integer"
              },
              "calendar_info": {
                "type": "string",
                "nullable": true
              },
              "daily_bookings_limit": {
                "type": "integer"
              },
              "disabled_text": {
                "type": "string",
                "nullable": true
              },
              "disabled_title": {
                "type": "string",
                "nullable": true
              },
              "enabled": {
                "type": "boolean"
              },
              "logo_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "max_appointments_per_day_segment": {
                "type": "integer"
              },
              "min_hours_advance_required_to_book": {
                "type": "integer"
              },
              "min_hours_notice_for_patient_cancellation": {
                "type": "integer"
              },
              "notice_enabled": {
                "type": "boolean"
              },
              "notice_text": {
                "type": "string",
                "nullable": true
              },
              "notice_title": {
                "type": "string",
                "nullable": true
              },
              "notify_practitioner_by_email": {
                "type": "boolean"
              },
              "notify_practitioner_by_sms": {
                "type": "boolean"
              },
              "policy": {
                "type": "string",
                "nullable": true
              },
              "practitioner_order": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "int64"
                },
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "require_patient_address": {
                "type": "boolean"
              },
              "show_appointment_duration": {
                "type": "boolean"
              },
              "show_prices": {
                "type": "boolean"
              }
            }
          },
          "online_payments": {
            "type": "object",
            "nullable": true,
            "properties": {
              "activated": {
                "type": "boolean"
              }
            }
          },
          "patient_custom_fields_definition": {
            "type": "object",
            "nullable": true,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": false,
                      "maxLength": 255
                    },
                    "token": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                      "nullable": false
                    },
                    "archived": {
                      "type": "boolean",
                      "nullable": false
                    },
                    "fields": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "archived": {
                            "type": "boolean",
                            "nullable": false
                          },
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 255
                          },
                          "token": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                            "nullable": false
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "checkboxes",
                              "date",
                              "paragraph",
                              "radiobuttons",
                              "text"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "archived": {
                                  "type": "boolean",
                                  "nullable": false
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 255
                                },
                                "token": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                                  "nullable": false
                                }
                              },
                              "required": [
                                "name",
                                "token"
                              ]
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "archived": {
                                "type": "boolean",
                                "nullable": false
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "token",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "token",
                    "fields"
                  ]
                }
              }
            },
            "required": [
              "sections"
            ]
          },
          "patient_privacy": {
            "type": "object",
            "nullable": true,
            "properties": {
              "browser_title_name_format": {
                "type": "string",
                "enum": [
                  "first_name",
                  "full_name",
                  "initials",
                  "anonymous",
                  "semi_anonymous"
                ]
              },
              "ical_patient_name_option": {
                "type": "string",
                "enum": [
                  "first_name",
                  "full_name",
                  "initials",
                  "anonymous",
                  "semi_anonymous"
                ]
              },
              "prevent_sending_financial_data_by_email": {
                "type": "boolean"
              },
              "requires_hipaa_compliance": {
                "type": "boolean"
              }
            }
          },
          "reminders": {
            "type": "object",
            "nullable": true,
            "properties": {
              "default_reminder_type": {
                "type": "string",
                "enum": [
                  "None",
                  "SMS",
                  "Email",
                  "SMS & Email"
                ]
              }
            }
          },
          "sms": {
            "type": "object",
            "nullable": true,
            "properties": {
              "alphanumeric_source_number_required": {
                "type": "boolean"
              },
              "default_alphanumeric_source_number": {
                "type": "string"
              },
              "max_message_length": {
                "type": "integer",
                "nullable": true
              },
              "number_of_usable_characters_per_message": {
                "type": "integer"
              },
              "patient_accept_sms_marketing_by_default": {
                "type": "boolean"
              },
              "replies_supported": {
                "type": "boolean"
              }
            }
          },
          "terminology": {
            "type": "object",
            "nullable": true,
            "properties": {
              "patient": {
                "type": "string",
                "enum": [
                  "patient",
                  "client"
                ]
              },
              "titles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "wait_list": {
            "type": "object",
            "nullable": true,
            "properties": {
              "default_wait_list_expiry_period": {
                "type": "integer"
              }
            }
          }
        },
        "x-tags": [
          "Public Settings"
        ]
      },
      "ReferralSource": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patients/123/referral_source"
              }
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "referral_source_type": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/referral_source_types/1"
                  }
                }
              }
            }
          },
          "referrer": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/456"
                  }
                }
              }
            }
          },
          "referrer_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Patient",
              "Contact"
            ]
          },
          "subcategory": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Referral Source"
        ]
      },
      "ReferralSourceType": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/referral_source_types/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "referrer_type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Contact",
              "Patient"
            ]
          },
          "referrers": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients"
                  }
                }
              }
            }
          },
          "subcategories": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            },
            "example": [
              "the google",
              "myspace",
              "friendster",
              "ask jeeves"
            ]
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Referral Source Type"
        ]
      },
      "Service": {
        "type": "object",
        "properties": {
          "appointment_type": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/appointment_types/1"
                  }
                }
              }
            }
          },
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "practitioners": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "object",
              "properties": {
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                    }
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Service"
        ]
      },
      "Settings": {
        "type": "object",
        "properties": {
          "account": {
            "type": "object",
            "nullable": true,
            "properties": {
              "id": {
                "type": "string",
                "format": "int64",
                "example": "1"
              },
              "name": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "country_code": {
                "type": "string",
                "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
                "example": "AU"
              },
              "currency_symbol": {
                "type": "string"
              },
              "subdomain": {
                "type": "string"
              },
              "has_time_travelers": {
                "type": "boolean"
              },
              "time_zone_support": {
                "type": "boolean"
              },
              "email_from": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "compliance": {
                "type": "object",
                "properties": {
                  "has_hipaa_compliance_conflicts": {
                    "type": "boolean"
                  },
                  "hipaa_compliance-conflict_messages": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "calendar": {
            "type": "object",
            "nullable": true,
            "properties": {
              "start_hour": {
                "type": "integer"
              },
              "end_hour": {
                "type": "integer"
              },
              "timeslot_height_in_pixels": {
                "type": "integer"
              },
              "timeslot_size_in_minutes": {
                "type": "integer"
              },
              "show_current_time_indicator": {
                "type": "boolean"
              },
              "multiple_appointments_gap": {
                "type": "boolean"
              }
            }
          },
          "documents_and_printing": {
            "type": "object",
            "nullable": true,
            "properties": {
              "logo_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "logo_height": {
                "type": "integer"
              }
            }
          },
          "email": {
            "type": "object",
            "nullable": true,
            "properties": {
              "patient_accept_email_marketing_by_default": {
                "type": "boolean"
              }
            }
          },
          "integrations": {
            "type": "object",
            "nullable": true,
            "properties": {
              "mail_chimp": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              },
              "xero": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              },
              "medipass": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "online_bookings": {
            "type": "object",
            "nullable": true,
            "properties": {
              "allow_bookings_days_in_advance": {
                "type": "integer"
              },
              "allow_online_bookings_time_zone_choice": {
                "type": "boolean"
              },
              "booking_reservation_minutes": {
                "type": "integer"
              },
              "calendar_info": {
                "type": "string",
                "nullable": true
              },
              "daily_bookings_limit": {
                "type": "integer"
              },
              "disabled_text": {
                "type": "string",
                "nullable": true
              },
              "disabled_title": {
                "type": "string",
                "nullable": true
              },
              "enabled": {
                "type": "boolean"
              },
              "logo_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "max_appointments_per_day_segment": {
                "type": "integer"
              },
              "min_hours_advance_required_to_book": {
                "type": "integer"
              },
              "min_hours_notice_for_patient_cancellation": {
                "type": "integer"
              },
              "notice_enabled": {
                "type": "boolean"
              },
              "notice_text": {
                "type": "string",
                "nullable": true
              },
              "notice_title": {
                "type": "string",
                "nullable": true
              },
              "notify_practitioner_by_email": {
                "type": "boolean"
              },
              "notify_practitioner_by_sms": {
                "type": "boolean"
              },
              "policy": {
                "type": "string",
                "nullable": true
              },
              "practitioner_order": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "int64"
                },
                "nullable": true
              },
              "privacy_policy_url": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "require_patient_address": {
                "type": "boolean"
              },
              "show_appointment_duration": {
                "type": "boolean"
              },
              "show_prices": {
                "type": "boolean"
              },
              "adroll": {
                "type": "object",
                "properties": {
                  "advertiser_id": {
                    "type": "string",
                    "nullable": true
                  },
                  "pixel_id": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "google_analytics": {
                "type": "object",
                "properties": {
                  "tracking_id": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "google_tag_manager": {
                "type": "object",
                "properties": {
                  "container_id": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          },
          "online_payments": {
            "type": "object",
            "nullable": true,
            "properties": {
              "activated": {
                "type": "boolean"
              }
            }
          },
          "patient_custom_fields_definition": {
            "type": "object",
            "nullable": true,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": false,
                      "maxLength": 255
                    },
                    "token": {
                      "type": "string",
                      "format": "uuid",
                      "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                      "nullable": false
                    },
                    "archived": {
                      "type": "boolean",
                      "nullable": false
                    },
                    "fields": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "archived": {
                            "type": "boolean",
                            "nullable": false
                          },
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 255
                          },
                          "token": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                            "nullable": false
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "checkboxes",
                              "date",
                              "paragraph",
                              "radiobuttons",
                              "text"
                            ]
                          },
                          "options": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "archived": {
                                  "type": "boolean",
                                  "nullable": false
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 255
                                },
                                "token": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                                  "nullable": false
                                }
                              },
                              "required": [
                                "name",
                                "token"
                              ]
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "archived": {
                                "type": "boolean",
                                "nullable": false
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "token",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "token",
                    "fields"
                  ]
                }
              }
            },
            "required": [
              "sections"
            ]
          },
          "patient_privacy": {
            "type": "object",
            "nullable": true,
            "properties": {
              "browser_title_name_format": {
                "type": "string",
                "enum": [
                  "first_name",
                  "full_name",
                  "initials",
                  "anonymous",
                  "semi_anonymous"
                ]
              },
              "ical_patient_name_option": {
                "type": "string",
                "enum": [
                  "first_name",
                  "full_name",
                  "initials",
                  "anonymous",
                  "semi_anonymous"
                ]
              },
              "prevent_sending_financial_data_by_email": {
                "type": "boolean"
              },
              "requires_hipaa_compliance": {
                "type": "boolean"
              },
              "anonymise_appointments_on_deletion": {
                "type": "boolean"
              },
              "anonymise_booking_notifications": {
                "type": "boolean"
              },
              "anonymise_invoices_and_payments_on_deletion": {
                "type": "boolean"
              },
              "baa_requested": {
                "type": "boolean"
              }
            }
          },
          "reminders": {
            "type": "object",
            "nullable": true,
            "properties": {
              "default_reminder_type": {
                "type": "string",
                "enum": [
                  "None",
                  "SMS",
                  "Email",
                  "SMS & Email"
                ]
              }
            }
          },
          "sms": {
            "type": "object",
            "nullable": true,
            "properties": {
              "alphanumeric_source_number_required": {
                "type": "boolean"
              },
              "default_alphanumeric_source_number": {
                "type": "string"
              },
              "max_message_length": {
                "type": "integer",
                "nullable": true
              },
              "number_of_usable_characters_per_message": {
                "type": "integer"
              },
              "patient_accept_sms_marketing_by_default": {
                "type": "boolean"
              },
              "replies_supported": {
                "type": "boolean"
              }
            }
          },
          "terminology": {
            "type": "object",
            "nullable": true,
            "properties": {
              "patient": {
                "type": "string",
                "enum": [
                  "patient",
                  "client"
                ]
              },
              "titles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "wait_list": {
            "type": "object",
            "nullable": true,
            "properties": {
              "default_wait_list_expiry_period": {
                "type": "integer"
              }
            }
          }
        },
        "x-tags": [
          "Settings"
        ]
      },
      "Signature": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "image": {
            "type": "string"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/signatures/1"
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "user": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/users/1"
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Signature"
        ]
      },
      "SmsCommunication": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendee": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/attendees/1"
                  }
                }
              }
            }
          },
          "booking": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/bookings/1"
                  }
                }
              }
            }
          },
          "category": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Account Statement",
              "Appointment Cancellation",
              "Appointment Confirmation",
              "Appointment Reminder",
              "Auth Code",
              "Bulk Email",
              "Cancelled appointment notification",
              "Completed Patient Form",
              "Invoice",
              "Letter",
              "Memo",
              "Online payment request",
              "Patient Form",
              "Patient Reply Forwarded",
              "Payment Receipt",
              "Practitioner Appointment Notification",
              "Reply from Patient",
              "Reply from Practitioner",
              "SMS Message",
              "Upcoming appointments"
            ]
          },
          "category_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | Appointment Reminder |\n| 2 | Patient Reply Forwarded |\n| 3 | Invoice |\n| 4 | Appointment Confirmation |\n| 5 | Letter |\n| 6 | Practitioner Appointment Notification |\n| 7 | SMS Message |\n| 8 | Reply from Patient |\n| 9 | Account Statement |\n| 10 | Cancelled appointment notification |\n| 11 | Auth Code |\n| 12 | Memo |\n| 13 | Reply from Practitioner |\n| 14 | Payment Receipt |\n| 15 | Bulk Email |\n| 16 | Appointment Cancellation |\n| 17 | Patient Form |\n| 18 | Upcoming appointments |\n| 19 | Completed Patient Form |\n| 20 | Online payment request |"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "direction_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | Sent |\n| 2 | Received |"
          },
          "direction_description": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Received",
              "Sent"
            ]
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "invoice": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/invoices/1"
                  }
                }
              }
            }
          },
          "letter": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/letters/1"
                  }
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/communications/1"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "payment": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/payments/1"
                  }
                }
              }
            }
          },
          "to": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true,
            "enum": [
              "Email",
              "Other",
              "Phone call",
              "SMS"
            ]
          },
          "type_code": {
            "type": "integer",
            "nullable": true,
            "enum": [
              1,
              2,
              3,
              4
            ],
            "description": "| Enum Value | Description |\n|---|---|\n| 1 | SMS |\n| 2 | Email |\n| 3 | Phone call |\n| 4 | Other |"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Sms Communication"
        ]
      },
      "StockAdjustment": {
        "type": "object",
        "properties": {
          "adjustment_type": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/stock_adjustments/1"
              }
            }
          },
          "product": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/products/1"
                  }
                }
              }
            }
          },
          "quantity": {
            "type": "integer",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "user": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/users/1"
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Stock Adjustment"
        ]
      },
      "Tax": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "minimum": 0,
            "maximum": 4000000000,
            "exclusiveMaximum": true,
            "deprecated": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/taxes/1"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "number",
            "minimum": 0,
            "maximum": 4000000000,
            "exclusiveMaximum": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Tax"
        ]
      },
      "TimeZone": {
        "type": "string",
        "enum": [
          "Abu Dhabi",
          "Adelaide",
          "Alaska",
          "Almaty",
          "American Samoa",
          "Amman",
          "Amsterdam",
          "Arizona",
          "Ashgabat",
          "Astana",
          "Asuncion",
          "Athens",
          "Atlantic Time (Canada)",
          "Auckland",
          "Azores",
          "Baghdad",
          "Baku",
          "Bangkok",
          "Beijing",
          "Beirut",
          "Belgrade",
          "Berlin",
          "Bern",
          "Bogota",
          "Brasilia",
          "Bratislava",
          "Brisbane",
          "Brussels",
          "Bucharest",
          "Budapest",
          "Buenos Aires",
          "Cairo",
          "Canberra",
          "Cape Verde Is.",
          "Caracas",
          "Casablanca",
          "Cayenne",
          "Central America",
          "Central Time (US & Canada)",
          "Chatham Is.",
          "Chennai",
          "Chihuahua",
          "Chongqing",
          "Copenhagen",
          "Damascus",
          "Darwin",
          "Dhaka",
          "Dublin",
          "Eastern Time (US & Canada)",
          "Edinburgh",
          "Ekaterinburg",
          "Fiji",
          "Georgetown",
          "Greenland",
          "Guadalajara",
          "Guam",
          "Hanoi",
          "Harare",
          "Hawaii",
          "Helsinki",
          "Hobart",
          "Hong Kong",
          "Indiana (East)",
          "International Date Line West",
          "Irkutsk",
          "Islamabad",
          "Istanbul",
          "Jakarta",
          "Jerusalem",
          "Kabul",
          "Kaliningrad",
          "Kamchatka",
          "Karachi",
          "Kathmandu",
          "Kolkata",
          "Krasnoyarsk",
          "Kuala Lumpur",
          "Kuwait",
          "Kyiv",
          "La Paz",
          "Lima",
          "Lisbon",
          "Ljubljana",
          "London",
          "Lord Howe",
          "Madrid",
          "Magadan",
          "Marshall Is.",
          "Mazatlan",
          "Melbourne",
          "Mexico City",
          "Mid-Atlantic",
          "Midway Island",
          "Minsk",
          "Monrovia",
          "Monterrey",
          "Montevideo",
          "Moscow",
          "Mountain Time (US & Canada)",
          "Mumbai",
          "Muscat",
          "Nairobi",
          "New Caledonia",
          "New Delhi",
          "Newfoundland",
          "Novosibirsk",
          "Nuku'alofa",
          "Osaka",
          "Oslo",
          "Pacific Time (US & Canada)",
          "Paris",
          "Perth",
          "Port Louis",
          "Port Moresby",
          "Prague",
          "Pretoria",
          "Puerto Rico",
          "Quito",
          "Rangoon",
          "Riga",
          "Riyadh",
          "Rome",
          "Samara",
          "Samoa",
          "Santiago",
          "Sapporo",
          "Sarajevo",
          "Saskatchewan",
          "Seoul",
          "Singapore",
          "Skopje",
          "Sofia",
          "Solomon Is.",
          "Srednekolymsk",
          "Sri Jayawardenepura",
          "St. Petersburg",
          "Stockholm",
          "Sydney",
          "Taipei",
          "Tallinn",
          "Tashkent",
          "Tbilisi",
          "Tehran",
          "Tijuana",
          "Tokelau Is.",
          "Tokyo",
          "Tripoli",
          "UTC",
          "Ulaanbaatar",
          "Urumqi",
          "Vienna",
          "Vilnius",
          "Vladivostok",
          "Volgograd",
          "Warsaw",
          "Wellington",
          "West Central Africa",
          "Windhoek",
          "Yakutsk",
          "Yerevan",
          "Zagreb",
          "Zurich"
        ],
        "example": "Melbourne"
      },
      "TimeZoneIdentifier": {
        "type": "string",
        "enum": [
          "Africa/Abidjan",
          "Africa/Accra",
          "Africa/Addis_Ababa",
          "Africa/Algiers",
          "Africa/Asmara",
          "Africa/Asmera",
          "Africa/Bamako",
          "Africa/Bangui",
          "Africa/Banjul",
          "Africa/Bissau",
          "Africa/Blantyre",
          "Africa/Brazzaville",
          "Africa/Bujumbura",
          "Africa/Cairo",
          "Africa/Casablanca",
          "Africa/Ceuta",
          "Africa/Conakry",
          "Africa/Dakar",
          "Africa/Dar_es_Salaam",
          "Africa/Djibouti",
          "Africa/Douala",
          "Africa/El_Aaiun",
          "Africa/Freetown",
          "Africa/Gaborone",
          "Africa/Harare",
          "Africa/Johannesburg",
          "Africa/Juba",
          "Africa/Kampala",
          "Africa/Khartoum",
          "Africa/Kigali",
          "Africa/Kinshasa",
          "Africa/Lagos",
          "Africa/Libreville",
          "Africa/Lome",
          "Africa/Luanda",
          "Africa/Lubumbashi",
          "Africa/Lusaka",
          "Africa/Malabo",
          "Africa/Maputo",
          "Africa/Maseru",
          "Africa/Mbabane",
          "Africa/Mogadishu",
          "Africa/Monrovia",
          "Africa/Nairobi",
          "Africa/Ndjamena",
          "Africa/Niamey",
          "Africa/Nouakchott",
          "Africa/Ouagadougou",
          "Africa/Porto-Novo",
          "Africa/Sao_Tome",
          "Africa/Timbuktu",
          "Africa/Tripoli",
          "Africa/Tunis",
          "Africa/Windhoek",
          "America/Adak",
          "America/Anchorage",
          "America/Anguilla",
          "America/Antigua",
          "America/Araguaina",
          "America/Argentina/Buenos_Aires",
          "America/Argentina/Catamarca",
          "America/Argentina/ComodRivadavia",
          "America/Argentina/Cordoba",
          "America/Argentina/Jujuy",
          "America/Argentina/La_Rioja",
          "America/Argentina/Mendoza",
          "America/Argentina/Rio_Gallegos",
          "America/Argentina/Salta",
          "America/Argentina/San_Juan",
          "America/Argentina/San_Luis",
          "America/Argentina/Tucuman",
          "America/Argentina/Ushuaia",
          "America/Aruba",
          "America/Asuncion",
          "America/Atikokan",
          "America/Atka",
          "America/Bahia",
          "America/Bahia_Banderas",
          "America/Barbados",
          "America/Belem",
          "America/Belize",
          "America/Blanc-Sablon",
          "America/Boa_Vista",
          "America/Bogota",
          "America/Boise",
          "America/Buenos_Aires",
          "America/Cambridge_Bay",
          "America/Campo_Grande",
          "America/Cancun",
          "America/Caracas",
          "America/Catamarca",
          "America/Cayenne",
          "America/Cayman",
          "America/Chicago",
          "America/Chihuahua",
          "America/Ciudad_Juarez",
          "America/Coral_Harbour",
          "America/Cordoba",
          "America/Costa_Rica",
          "America/Creston",
          "America/Cuiaba",
          "America/Curacao",
          "America/Danmarkshavn",
          "America/Dawson",
          "America/Dawson_Creek",
          "America/Denver",
          "America/Detroit",
          "America/Dominica",
          "America/Edmonton",
          "America/Eirunepe",
          "America/El_Salvador",
          "America/Ensenada",
          "America/Fort_Nelson",
          "America/Fort_Wayne",
          "America/Fortaleza",
          "America/Glace_Bay",
          "America/Godthab",
          "America/Goose_Bay",
          "America/Grand_Turk",
          "America/Grenada",
          "America/Guadeloupe",
          "America/Guatemala",
          "America/Guayaquil",
          "America/Guyana",
          "America/Halifax",
          "America/Havana",
          "America/Hermosillo",
          "America/Indiana/Indianapolis",
          "America/Indiana/Knox",
          "America/Indiana/Marengo",
          "America/Indiana/Petersburg",
          "America/Indiana/Tell_City",
          "America/Indiana/Vevay",
          "America/Indiana/Vincennes",
          "America/Indiana/Winamac",
          "America/Indianapolis",
          "America/Inuvik",
          "America/Iqaluit",
          "America/Jamaica",
          "America/Jujuy",
          "America/Juneau",
          "America/Kentucky/Louisville",
          "America/Kentucky/Monticello",
          "America/Knox_IN",
          "America/Kralendijk",
          "America/La_Paz",
          "America/Lima",
          "America/Los_Angeles",
          "America/Louisville",
          "America/Lower_Princes",
          "America/Maceio",
          "America/Managua",
          "America/Manaus",
          "America/Marigot",
          "America/Martinique",
          "America/Matamoros",
          "America/Mazatlan",
          "America/Mendoza",
          "America/Menominee",
          "America/Merida",
          "America/Metlakatla",
          "America/Mexico_City",
          "America/Miquelon",
          "America/Moncton",
          "America/Monterrey",
          "America/Montevideo",
          "America/Montreal",
          "America/Montserrat",
          "America/Nassau",
          "America/New_York",
          "America/Nipigon",
          "America/Nome",
          "America/Noronha",
          "America/North_Dakota/Beulah",
          "America/North_Dakota/Center",
          "America/North_Dakota/New_Salem",
          "America/Nuuk",
          "America/Ojinaga",
          "America/Panama",
          "America/Pangnirtung",
          "America/Pangnirtung",
          "America/Paramaribo",
          "America/Phoenix",
          "America/Port-au-Prince",
          "America/Port_of_Spain",
          "America/Porto_Acre",
          "America/Porto_Velho",
          "America/Puerto_Rico",
          "America/Punta_Arenas",
          "America/Rainy_River",
          "America/Rankin_Inlet",
          "America/Recife",
          "America/Regina",
          "America/Resolute",
          "America/Rio_Branco",
          "America/Rosario",
          "America/Santa_Isabel",
          "America/Santarem",
          "America/Santiago",
          "America/Santo_Domingo",
          "America/Sao_Paulo",
          "America/Scoresbysund",
          "America/Shiprock",
          "America/Sitka",
          "America/St_Barthelemy",
          "America/St_Johns",
          "America/St_Kitts",
          "America/St_Lucia",
          "America/St_Thomas",
          "America/St_Vincent",
          "America/Swift_Current",
          "America/Tegucigalpa",
          "America/Thule",
          "America/Thunder_Bay",
          "America/Tijuana",
          "America/Toronto",
          "America/Tortola",
          "America/Vancouver",
          "America/Virgin",
          "America/Whitehorse",
          "America/Winnipeg",
          "America/Yakutat",
          "America/Yellowknife",
          "Antarctica/Casey",
          "Antarctica/Davis",
          "Antarctica/DumontDUrville",
          "Antarctica/Macquarie",
          "Antarctica/Mawson",
          "Antarctica/McMurdo",
          "Antarctica/Palmer",
          "Antarctica/Rothera",
          "Antarctica/South_Pole",
          "Antarctica/Syowa",
          "Antarctica/Troll",
          "Antarctica/Vostok",
          "Arctic/Longyearbyen",
          "Asia/Aden",
          "Asia/Almaty",
          "Asia/Amman",
          "Asia/Anadyr",
          "Asia/Aqtau",
          "Asia/Aqtobe",
          "Asia/Ashgabat",
          "Asia/Ashkhabad",
          "Asia/Atyrau",
          "Asia/Baghdad",
          "Asia/Bahrain",
          "Asia/Baku",
          "Asia/Bangkok",
          "Asia/Barnaul",
          "Asia/Beirut",
          "Asia/Bishkek",
          "Asia/Brunei",
          "Asia/Calcutta",
          "Asia/Chita",
          "Asia/Choibalsan",
          "Asia/Chongqing",
          "Asia/Chungking",
          "Asia/Colombo",
          "Asia/Dacca",
          "Asia/Damascus",
          "Asia/Dhaka",
          "Asia/Dili",
          "Asia/Dubai",
          "Asia/Dushanbe",
          "Asia/Famagusta",
          "Asia/Gaza",
          "Asia/Harbin",
          "Asia/Hebron",
          "Asia/Ho_Chi_Minh",
          "Asia/Hong_Kong",
          "Asia/Hovd",
          "Asia/Irkutsk",
          "Asia/Istanbul",
          "Asia/Jakarta",
          "Asia/Jayapura",
          "Asia/Jerusalem",
          "Asia/Kabul",
          "Asia/Kamchatka",
          "Asia/Karachi",
          "Asia/Kashgar",
          "Asia/Kathmandu",
          "Asia/Katmandu",
          "Asia/Khandyga",
          "Asia/Kolkata",
          "Asia/Krasnoyarsk",
          "Asia/Kuala_Lumpur",
          "Asia/Kuching",
          "Asia/Kuwait",
          "Asia/Macao",
          "Asia/Macau",
          "Asia/Magadan",
          "Asia/Makassar",
          "Asia/Manila",
          "Asia/Muscat",
          "Asia/Nicosia",
          "Asia/Novokuznetsk",
          "Asia/Novosibirsk",
          "Asia/Omsk",
          "Asia/Oral",
          "Asia/Phnom_Penh",
          "Asia/Pontianak",
          "Asia/Pyongyang",
          "Asia/Qatar",
          "Asia/Qostanay",
          "Asia/Qyzylorda",
          "Asia/Rangoon",
          "Asia/Riyadh",
          "Asia/Saigon",
          "Asia/Sakhalin",
          "Asia/Samarkand",
          "Asia/Seoul",
          "Asia/Shanghai",
          "Asia/Singapore",
          "Asia/Srednekolymsk",
          "Asia/Taipei",
          "Asia/Tashkent",
          "Asia/Tbilisi",
          "Asia/Tehran",
          "Asia/Tel_Aviv",
          "Asia/Thimbu",
          "Asia/Thimphu",
          "Asia/Tokyo",
          "Asia/Tomsk",
          "Asia/Ujung_Pandang",
          "Asia/Ulaanbaatar",
          "Asia/Ulan_Bator",
          "Asia/Urumqi",
          "Asia/Ust-Nera",
          "Asia/Vientiane",
          "Asia/Vladivostok",
          "Asia/Yakutsk",
          "Asia/Yangon",
          "Asia/Yekaterinburg",
          "Asia/Yerevan",
          "Atlantic/Azores",
          "Atlantic/Bermuda",
          "Atlantic/Canary",
          "Atlantic/Cape_Verde",
          "Atlantic/Faeroe",
          "Atlantic/Faroe",
          "Atlantic/Jan_Mayen",
          "Atlantic/Madeira",
          "Atlantic/Reykjavik",
          "Atlantic/South_Georgia",
          "Atlantic/St_Helena",
          "Atlantic/Stanley",
          "Australia/ACT",
          "Australia/Adelaide",
          "Australia/Brisbane",
          "Australia/Broken_Hill",
          "Australia/Canberra",
          "Australia/Currie",
          "Australia/Darwin",
          "Australia/Eucla",
          "Australia/Hobart",
          "Australia/LHI",
          "Australia/Lindeman",
          "Australia/Lord_Howe",
          "Australia/Melbourne",
          "Australia/NSW",
          "Australia/North",
          "Australia/Perth",
          "Australia/Queensland",
          "Australia/South",
          "Australia/Sydney",
          "Australia/Tasmania",
          "Australia/Victoria",
          "Australia/West",
          "Australia/Yancowinna",
          "Brazil/Acre",
          "Brazil/DeNoronha",
          "Brazil/East",
          "Brazil/West",
          "Canada/Atlantic",
          "Canada/Central",
          "Canada/Eastern",
          "Canada/Mountain",
          "Canada/Newfoundland",
          "Canada/Pacific",
          "Canada/Saskatchewan",
          "Canada/Yukon",
          "Chile/Continental",
          "Chile/EasterIsland",
          "Cuba",
          "Egypt",
          "Eire",
          "Etc/GMT",
          "Etc/GMT+0",
          "Etc/GMT+12",
          "Etc/GMT-0",
          "Etc/GMT0",
          "Etc/Greenwich",
          "Etc/UCT",
          "Etc/UTC",
          "Etc/Universal",
          "Etc/Zulu",
          "Europe/Amsterdam",
          "Europe/Andorra",
          "Europe/Astrakhan",
          "Europe/Athens",
          "Europe/Belfast",
          "Europe/Belgrade",
          "Europe/Berlin",
          "Europe/Bratislava",
          "Europe/Brussels",
          "Europe/Bucharest",
          "Europe/Budapest",
          "Europe/Busingen",
          "Europe/Chisinau",
          "Europe/Copenhagen",
          "Europe/Dublin",
          "Europe/Gibraltar",
          "Europe/Guernsey",
          "Europe/Helsinki",
          "Europe/Isle_of_Man",
          "Europe/Istanbul",
          "Europe/Jersey",
          "Europe/Kaliningrad",
          "Europe/Kiev",
          "Europe/Kiev",
          "Europe/Kirov",
          "Europe/Kyiv",
          "Europe/Lisbon",
          "Europe/Ljubljana",
          "Europe/London",
          "Europe/Luxembourg",
          "Europe/Madrid",
          "Europe/Malta",
          "Europe/Mariehamn",
          "Europe/Minsk",
          "Europe/Monaco",
          "Europe/Moscow",
          "Europe/Nicosia",
          "Europe/Oslo",
          "Europe/Paris",
          "Europe/Podgorica",
          "Europe/Prague",
          "Europe/Riga",
          "Europe/Rome",
          "Europe/Samara",
          "Europe/San_Marino",
          "Europe/Sarajevo",
          "Europe/Saratov",
          "Europe/Simferopol",
          "Europe/Skopje",
          "Europe/Sofia",
          "Europe/Stockholm",
          "Europe/Tallinn",
          "Europe/Tirane",
          "Europe/Tiraspol",
          "Europe/Ulyanovsk",
          "Europe/Uzhgorod",
          "Europe/Vaduz",
          "Europe/Vatican",
          "Europe/Vienna",
          "Europe/Vilnius",
          "Europe/Volgograd",
          "Europe/Warsaw",
          "Europe/Zagreb",
          "Europe/Zaporozhye",
          "Europe/Zurich",
          "GB",
          "GB-Eire",
          "GMT",
          "GMT+0",
          "GMT-0",
          "GMT0",
          "Greenwich",
          "Hongkong",
          "Iceland",
          "Indian/Antananarivo",
          "Indian/Chagos",
          "Indian/Christmas",
          "Indian/Cocos",
          "Indian/Comoro",
          "Indian/Kerguelen",
          "Indian/Mahe",
          "Indian/Maldives",
          "Indian/Mauritius",
          "Indian/Mayotte",
          "Indian/Reunion",
          "Iran",
          "Israel",
          "Jamaica",
          "Japan",
          "Kwajalein",
          "Libya",
          "Mexico/BajaNorte",
          "Mexico/BajaSur",
          "Mexico/General",
          "NZ",
          "NZ-CHAT",
          "Navajo",
          "PRC",
          "Pacific/Apia",
          "Pacific/Auckland",
          "Pacific/Bougainville",
          "Pacific/Chatham",
          "Pacific/Chuuk",
          "Pacific/Easter",
          "Pacific/Efate",
          "Pacific/Enderbury",
          "Pacific/Fakaofo",
          "Pacific/Fiji",
          "Pacific/Funafuti",
          "Pacific/Galapagos",
          "Pacific/Gambier",
          "Pacific/Guadalcanal",
          "Pacific/Guam",
          "Pacific/Honolulu",
          "Pacific/Johnston",
          "Pacific/Kanton",
          "Pacific/Kiritimati",
          "Pacific/Kosrae",
          "Pacific/Kwajalein",
          "Pacific/Majuro",
          "Pacific/Marquesas",
          "Pacific/Midway",
          "Pacific/Nauru",
          "Pacific/Niue",
          "Pacific/Norfolk",
          "Pacific/Noumea",
          "Pacific/Pago_Pago",
          "Pacific/Palau",
          "Pacific/Pitcairn",
          "Pacific/Pohnpei",
          "Pacific/Ponape",
          "Pacific/Port_Moresby",
          "Pacific/Rarotonga",
          "Pacific/Saipan",
          "Pacific/Samoa",
          "Pacific/Tahiti",
          "Pacific/Tarawa",
          "Pacific/Tongatapu",
          "Pacific/Truk",
          "Pacific/Wake",
          "Pacific/Wallis",
          "Pacific/Yap",
          "Poland",
          "Portugal",
          "ROC",
          "ROK",
          "Singapore",
          "Turkey",
          "UCT",
          "US/Alaska",
          "US/Aleutian",
          "US/Arizona",
          "US/Central",
          "US/East-Indiana",
          "US/Eastern",
          "US/Hawaii",
          "US/Indiana-Starke",
          "US/Michigan",
          "US/Mountain",
          "US/Pacific",
          "US/Samoa",
          "UTC",
          "Universal",
          "W-SU",
          "Zulu"
        ],
        "example": "Australia/Melbourne"
      },
      "TreatmentNote": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "attendee": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/attendees/1"
                  }
                }
              }
            }
          },
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "booking": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/bookings/1"
                  }
                }
              }
            }
          },
          "content": {
            "type": "object",
            "nullable": true,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 10000
                    },
                    "questions": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 255
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "bodycharts",
                              "checkboxes",
                              "date",
                              "paragraph",
                              "radiobuttons",
                              "text"
                            ]
                          },
                          "answer": {
                            "type": "string",
                            "nullable": false
                          },
                          "answers": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 255
                                },
                                "selected": {
                                  "type": "boolean",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "selected": {
                                "type": "boolean",
                                "nullable": false
                              },
                              "value": {
                                "type": "string",
                                "nullable": false,
                                "maxLength": 255
                              }
                            }
                          },
                          "body_chart_ids": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "string",
                              "format": "int64",
                              "example": "1"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "draft": {
            "type": "boolean",
            "nullable": true
          },
          "finalized_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/treatment_notes/1"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "pinned_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "title": {
            "type": "string"
          },
          "treatment_note_template": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/treatment_note_templates/1"
                  }
                }
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Treatment Note"
        ]
      },
      "TreatmentNoteTemplate": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "content": {
            "type": "object",
            "nullable": false,
            "properties": {
              "sections": {
                "type": "array",
                "nullable": false,
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 10000
                    },
                    "questions": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "maxLength": 255
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "bodycharts",
                              "checkboxes",
                              "date",
                              "paragraph",
                              "radiobuttons",
                              "text"
                            ]
                          },
                          "answer": {
                            "type": "string",
                            "nullable": false
                          },
                          "answers": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "nullable": true,
                                  "maxLength": 255
                                }
                              }
                            }
                          },
                          "other": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "nullable": false
                              }
                            }
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/treatment_note_templates/1"
              }
            }
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "print_settings": {
            "type": "object",
            "nullable": true,
            "properties": {
              "include_patient_address": {
                "type": "boolean",
                "nullable": true
              },
              "include_patient_dob": {
                "type": "boolean",
                "nullable": true
              },
              "include_patient_medicare": {
                "type": "boolean",
                "nullable": true
              },
              "include_patient_occupation": {
                "type": "boolean",
                "nullable": true
              },
              "include_patient_reference_number": {
                "type": "boolean",
                "nullable": true
              },
              "title": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Treatment Note Template"
        ]
      },
      "UnavailableBlock": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "business": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/businesses/1"
                  }
                }
              }
            }
          },
          "conflicts": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/unavailable_blocks/1/conflicts"
                  }
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "deleted_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ends_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/unavailable_blocks/1"
              }
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "practitioner": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/practitioners/1"
                  }
                }
              }
            }
          },
          "repeat_rule": {
            "type": "object",
            "properties": {
              "number_of_repeats": {
                "type": "integer",
                "minimum": 0,
                "maximum": 51,
                "exclusiveMinimum": true,
                "nullable": true
              },
              "repeat_type": {
                "type": "string",
                "enum": [
                  "Daily",
                  "Monthly",
                  "Weekly"
                ],
                "nullable": true
              },
              "repeating_interval": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "exclusiveMinimum": true,
                "nullable": true
              }
            },
            "nullable": true
          },
          "repeated_from": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/unavailable_blocks/1"
                  }
                }
              }
            }
          },
          "repeats": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/unavailable_blocks?q[]=repeated_from_id:=1"
                  }
                }
              }
            }
          },
          "starts_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "x-tags": [
          "Unavailable Block"
        ]
      },
      "UploadedPatientAttachment": {
        "type": "object",
        "properties": {
          "archived_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "content": {
            "type": "object",
            "nullable": true,
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patient_attachments/1"
                  }
                }
              }
            }
          },
          "content_type": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/patient_attachments/1"
              }
            }
          },
          "patient": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/patients/1"
                  }
                }
              }
            }
          },
          "pinned_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "processing_completed": {
            "type": "boolean",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "user": {
            "type": "object",
            "properties": {
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://api.au1.cliniko.com/v1/users/1"
                  }
                }
              }
            }
          }
        },
        "x-tags": [
          "Uploaded Patient Attachment"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "email": {
            "type": "string",
            "minLength": 5,
            "pattern": "^[A-Z0-9!#$%&'*+/=?^_`{|}~.-]+@[A-Z0-9.-]+\\.[A-Z]{2,63}$"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "int64",
            "example": "1",
            "nullable": false
          },
          "last_name": {
            "type": "string"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri",
                "example": "https://api.au1.cliniko.com/v1/users/1"
              }
            }
          },
          "new_ui_enabled": {
            "type": "boolean",
            "nullable": true
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneNumber"
            },
            "nullable": true
          },
          "privacy_policy_accepted": {
            "type": "number",
            "nullable": true
          },
          "role": {
            "type": "string",
            "enum": [
              "administrator",
              "bookkeeper",
              "power receptionist",
              "practitioner",
              "receptionist",
              "scheduler"
            ],
            "nullable": true
          },
          "time_zone": {
            "type": "string",
            "description": "See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)",
            "example": "Melbourne",
            "enum": [
              "Abu Dhabi",
              "Adelaide",
              "Alaska",
              "Almaty",
              "American Samoa",
              "Amman",
              "Amsterdam",
              "Arizona",
              "Ashgabat",
              "Astana",
              "Asuncion",
              "Athens",
              "Atlantic Time (Canada)",
              "Auckland",
              "Azores",
              "Baghdad",
              "Baku",
              "Bangkok",
              "Beijing",
              "Beirut",
              "Belgrade",
              "Berlin",
              "Bern",
              "Bogota",
              "Brasilia",
              "Bratislava",
              "Brisbane",
              "Brussels",
              "Bucharest",
              "Budapest",
              "Buenos Aires",
              "Cairo",
              "Canberra",
              "Cape Verde Is.",
              "Caracas",
              "Casablanca",
              "Cayenne",
              "Central America",
              "Central Time (US & Canada)",
              "Chatham Is.",
              "Chennai",
              "Chihuahua",
              "Chongqing",
              "Copenhagen",
              "Damascus",
              "Darwin",
              "Dhaka",
              "Dublin",
              "Eastern Time (US & Canada)",
              "Edinburgh",
              "Ekaterinburg",
              "Fiji",
              "Georgetown",
              "Greenland",
              "Guadalajara",
              "Guam",
              "Hanoi",
              "Harare",
              "Hawaii",
              "Helsinki",
              "Hobart",
              "Hong Kong",
              "Indiana (East)",
              "International Date Line West",
              "Irkutsk",
              "Islamabad",
              "Istanbul",
              "Jakarta",
              "Jerusalem",
              "Kabul",
              "Kaliningrad",
              "Kamchatka",
              "Karachi",
              "Kathmandu",
              "Kolkata",
              "Krasnoyarsk",
              "Kuala Lumpur",
              "Kuwait",
              "Kyiv",
              "La Paz",
              "Lima",
              "Lisbon",
              "Ljubljana",
              "London",
              "Lord Howe",
              "Madrid",
              "Magadan",
              "Marshall Is.",
              "Mazatlan",
              "Melbourne",
              "Mexico City",
              "Mid-Atlantic",
              "Midway Island",
              "Minsk",
              "Monrovia",
              "Monterrey",
              "Montevideo",
              "Moscow",
              "Mountain Time (US & Canada)",
              "Mumbai",
              "Muscat",
              "Nairobi",
              "New Caledonia",
              "New Delhi",
              "Newfoundland",
              "Novosibirsk",
              "Nuku'alofa",
              "Osaka",
              "Oslo",
              "Pacific Time (US & Canada)",
              "Paris",
              "Perth",
              "Port Louis",
              "Port Moresby",
              "Prague",
              "Pretoria",
              "Puerto Rico",
              "Quito",
              "Rangoon",
              "Riga",
              "Riyadh",
              "Rome",
              "Samara",
              "Samoa",
              "Santiago",
              "Sapporo",
              "Sarajevo",
              "Saskatchewan",
              "Seoul",
              "Singapore",
              "Skopje",
              "Sofia",
              "Solomon Is.",
              "Srednekolymsk",
              "Sri Jayawardenepura",
              "St. Petersburg",
              "Stockholm",
              "Sydney",
              "Taipei",
              "Tallinn",
              "Tashkent",
              "Tbilisi",
              "Tehran",
              "Tijuana",
              "Tokelau Is.",
              "Tokyo",
              "Tripoli",
              "UTC",
              "Ulaanbaatar",
              "Urumqi",
              "Vienna",
              "Vilnius",
              "Vladivostok",
              "Volgograd",
              "Warsaw",
              "Wellington",
              "West Central Africa",
              "Windhoek",
              "Yakutsk",
              "Yerevan",
              "Zagreb",
              "Zurich"
            ]
          },
          "time_zone_identifier": {
            "type": "string",
            "description": "See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)",
            "example": "Australia/Melbourne",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "user_active": {
            "type": "boolean",
            "nullable": true
          }
        },
        "x-tags": [
          "User"
        ]
      },
      "AvailableTime": {
        "properties": {
          "appointment_start": {
            "type": "string",
            "format": "date-time"
          }
        },
        "x-tags": [
          "Available Time"
        ]
      }
    },
    "requestBodies": {
      "AppointmentType": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "add_deposit_to_account_credit": {
                  "type": "boolean",
                  "nullable": true
                },
                "billable_item_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "billable item id",
                  "example": "1"
                },
                "category": {
                  "type": "string",
                  "nullable": true
                },
                "color": {
                  "type": "string",
                  "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
                },
                "deposit_price": {
                  "type": "string",
                  "format": "decimal",
                  "minimum": 0,
                  "maximum": 4000000000,
                  "exclusiveMaximum": true,
                  "nullable": true
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "duration_in_minutes": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1440,
                  "exclusiveMinimum": true,
                  "exclusiveMaximum": true
                },
                "online_bookings_lead_time_hours": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2,
                    4,
                    12,
                    18,
                    24,
                    48,
                    72,
                    168,
                    336,
                    504,
                    672
                  ],
                  "nullable": true
                },
                "online_payments_mode": {
                  "type": "string",
                  "enum": [
                    "deposit_required",
                    "optional",
                    "required"
                  ],
                  "nullable": true
                },
                "max_attendees": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 100,
                  "exclusiveMinimum": true,
                  "exclusiveMaximum": true
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "product_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "product id",
                  "example": "1"
                },
                "show_in_online_bookings": {
                  "type": "boolean",
                  "nullable": true
                },
                "telehealth_enabled": {
                  "type": "boolean",
                  "nullable": true
                },
                "treatment_note_template_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "treatment note template id",
                  "example": "1"
                },
                "appointment_confirmation_template_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  },
                  "nullable": true
                },
                "appointment_reminder_template_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  },
                  "nullable": true
                },
                "business_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  }
                },
                "practitioner_ids": {
                  "type": "array",
                  "description": "Practitioner ids",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  }
                }
              }
            }
          }
        }
      },
      "Attendee": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "booking_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "booking id",
                  "example": "1"
                },
                "arrived": {
                  "type": "boolean",
                  "nullable": true
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                },
                "patient_case_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient case id",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "AttendeeCancel": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cancellation_note": {
                  "type": "string",
                  "nullable": true
                },
                "cancellation_reason": {
                  "type": "integer",
                  "nullable": false,
                  "description": "| Enum Value | Description |\n|---|---|\n|10|Feeling better|\n|20|Condition worse|\n|30|Sick|\n|31|COVID-19 related|\n|40|Away|\n|50|Other|\n|60|Work|\n",
                  "enum": [
                    10,
                    20,
                    30,
                    31,
                    40,
                    50,
                    60
                  ]
                },
                "apply_to_repeats": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "AttendeeUpdate": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "arrived": {
                  "type": "boolean",
                  "nullable": true
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "patient_case_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient case id",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "AvailabilityBlock": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "business_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "business id",
                  "example": "1"
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "practitioner_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "practitioner id",
                  "example": "1"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "repeat_rule": {
                  "type": "object",
                  "properties": {
                    "number_of_repeats": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100,
                      "exclusiveMinimum": true,
                      "nullable": true
                    },
                    "repeat_type": {
                      "type": "string",
                      "enum": [
                        "Daily",
                        "Monthly",
                        "Weekly"
                      ],
                      "nullable": true
                    },
                    "repeating_interval": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100,
                      "exclusiveMinimum": true,
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "BillableItem": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "item_code": {
                  "type": "string",
                  "maxLength": 100,
                  "nullable": true
                },
                "item_type": {
                  "type": "string",
                  "enum": [
                    "Product",
                    "Service",
                    "Other"
                  ]
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "price": {
                  "type": "string",
                  "format": "decimal",
                  "minimum": -4000000000,
                  "maximum": 4000000000,
                  "exclusiveMaximum": true
                },
                "tax_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "tax id",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "Business": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "additional_information": {
                  "type": "string",
                  "maxLength": 5000,
                  "nullable": true
                },
                "address_1": {
                  "type": "string",
                  "nullable": true
                },
                "address_2": {
                  "type": "string",
                  "nullable": true
                },
                "appointment_reminders_enabled": {
                  "type": "boolean",
                  "nullable": true
                },
                "business_name": {
                  "type": "string",
                  "nullable": true
                },
                "business_registration_name": {
                  "type": "string",
                  "nullable": true
                },
                "business_registration_value": {
                  "type": "string",
                  "nullable": true
                },
                "city": {
                  "type": "string",
                  "nullable": true
                },
                "contact_information": {
                  "type": "string",
                  "nullable": true
                },
                "country_code": {
                  "type": "string",
                  "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
                  "example": "AU",
                  "nullable": true
                },
                "display_name": {
                  "type": "string",
                  "nullable": true
                },
                "email_reply_to": {
                  "type": "string",
                  "nullable": true
                },
                "logo": {
                  "type": "string",
                  "description": "Base64 encoded file attachment"
                },
                "logo_height": {
                  "type": "integer"
                },
                "post_code": {
                  "type": "string",
                  "nullable": true
                },
                "remove_logo": {
                  "type": "boolean"
                },
                "show_in_online_bookings": {
                  "type": "boolean",
                  "nullable": true
                },
                "state": {
                  "type": "string",
                  "nullable": true
                },
                "time_zone": {
                  "type": "string",
                  "description": "See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)",
                  "example": "Melbourne",
                  "nullable": true
                },
                "time_zone_identifier": {
                  "type": "string",
                  "description": "See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)",
                  "example": "Australia/Melbourne",
                  "nullable": true
                },
                "website_address": {
                  "type": "string",
                  "nullable": true
                },
                "appointment_type_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "BusinessCreate": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "additional_information": {
                  "type": "string",
                  "maxLength": 5000,
                  "nullable": true
                },
                "address_1": {
                  "type": "string",
                  "nullable": true
                },
                "address_2": {
                  "type": "string",
                  "nullable": true
                },
                "appointment_reminders_enabled": {
                  "type": "boolean",
                  "nullable": true
                },
                "business_name": {
                  "type": "string",
                  "nullable": true
                },
                "business_registration_name": {
                  "type": "string",
                  "nullable": true
                },
                "business_registration_value": {
                  "type": "string",
                  "nullable": true
                },
                "city": {
                  "type": "string",
                  "nullable": true
                },
                "contact_information": {
                  "type": "string",
                  "nullable": true
                },
                "country_code": {
                  "type": "string",
                  "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
                  "example": "AU",
                  "nullable": true
                },
                "display_name": {
                  "type": "string",
                  "nullable": true
                },
                "email_reply_to": {
                  "type": "string",
                  "nullable": true
                },
                "logo": {
                  "type": "string",
                  "description": "Base64 encoded file attachment"
                },
                "logo_height": {
                  "type": "integer"
                },
                "post_code": {
                  "type": "string",
                  "nullable": true
                },
                "remove_logo": {
                  "type": "boolean"
                },
                "show_in_online_bookings": {
                  "type": "boolean",
                  "nullable": true
                },
                "state": {
                  "type": "string",
                  "nullable": true
                },
                "time_zone": {
                  "type": "string",
                  "description": "See: [supported time zones](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone)",
                  "example": "Melbourne",
                  "nullable": true
                },
                "time_zone_identifier": {
                  "type": "string",
                  "description": "See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)",
                  "example": "Australia/Melbourne",
                  "nullable": true
                },
                "website_address": {
                  "type": "string",
                  "nullable": true
                },
                "appointment_type_ids": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "ConcessionType": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255
                }
              }
            }
          }
        }
      },
      "Contact": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "address_1": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "address_2": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "address_3": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "city": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "company_name": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "country_code": {
                  "type": "string",
                  "description": "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1#Current_codes) country code",
                  "example": "AU",
                  "maxLength": 2,
                  "nullable": true
                },
                "doctor_type": {
                  "type": "string",
                  "enum": [
                    "general_practitioner",
                    "specialist"
                  ],
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "last_name": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "occupation": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "post_code": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "preferred_name": {
                  "type": "string",
                  "nullable": true
                },
                "provider_number": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "state": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "title": {
                  "type": "string",
                  "nullable": true
                },
                "type_code": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "nullable": true
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "phone_type": {
                        "enum": [
                          "Mobile",
                          "Home",
                          "Work",
                          "Other",
                          "Fax"
                        ],
                        "type": "string"
                      },
                      "number": {
                        "type": "string",
                        "format": "phone",
                        "example": "0-123-456-78"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GroupAppointment": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "appointment_type_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "appointment type id",
                  "example": "1"
                },
                "business_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "business id",
                  "example": "1"
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "If not provided, this will be based on the duration of the appointment type."
                },
                "max_attendees": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 100,
                  "exclusiveMinimum": true,
                  "exclusiveMaximum": true,
                  "description": "If not provided, this will be based on the max_attendees of the appointment type."
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "practitioner_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "practitioner id",
                  "example": "1"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "repeat_rule": {
                  "type": "object",
                  "properties": {
                    "number_of_repeats": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 51,
                      "exclusiveMinimum": true,
                      "nullable": true
                    },
                    "repeat_type": {
                      "type": "string",
                      "enum": [
                        "Daily",
                        "Monthly",
                        "Weekly"
                      ],
                      "nullable": true
                    },
                    "repeating_interval": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100,
                      "exclusiveMinimum": true,
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "IndividualAppointment": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "appointment_type_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "appointment type id",
                  "example": "1"
                },
                "business_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "business id",
                  "example": "1"
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "If not provided, this will be based on the duration of the appointment type."
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                },
                "patient_case_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient case id",
                  "example": "1"
                },
                "practitioner_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "practitioner id",
                  "example": "1"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "repeat_rule": {
                  "type": "object",
                  "properties": {
                    "number_of_repeats": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 51,
                      "exclusiveMinimum": true,
                      "nullable": true
                    },
                    "repeat_type": {
                      "type": "string",
                      "enum": [
                        "Daily",
                        "Monthly",
                        "Weekly"
                      ],
                      "nullable": true
                    },
                    "repeating_interval": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100,
                      "exclusiveMinimum": true,
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "IndividualAppointmentCancel": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "cancellation_note": {
                  "type": "string",
                  "nullable": true
                },
                "cancellation_reason": {
                  "type": "integer",
                  "nullable": false,
                  "description": "| Enum Value | Description |\n|---|---|\n|10|Feeling better|\n|20|Condition worse|\n|30|Sick|\n|31|COVID-19 related|\n|40|Away|\n|50|Other|\n|60|Work|\n",
                  "enum": [
                    10,
                    20,
                    30,
                    31,
                    40,
                    50,
                    60
                  ]
                },
                "apply_to_repeats": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "MedicalAlert": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                },
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "Patient": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "accepted_privacy_policy": {
                  "type": "boolean",
                  "nullable": true
                },
                "accepted_email_marketing": {
                  "type": "boolean",
                  "nullable": true
                },
                "address_1": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "address_2": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "address_3": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "appointment_notes": {
                  "type": "string",
                  "nullable": true
                },
                "city": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "concession_type_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "concession type id",
                  "example": "1"
                },
                "country": {
                  "type": "string",
                  "nullable": true
                },
                "custom_fields": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "sections": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "token": {
                            "type": "string",
                            "format": "uuid",
                            "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                            "nullable": false
                          },
                          "archived": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "fields": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "archived": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "token": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                                  "nullable": false
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "options": {
                                  "type": "array",
                                  "nullable": false,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "archived": {
                                        "type": "boolean",
                                        "nullable": true
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "token": {
                                        "type": "string",
                                        "format": "uuid",
                                        "example": "ef4c43ec-105d-489c-88cc-0f3c5f67dc70",
                                        "nullable": false
                                      },
                                      "selected": {
                                        "type": "boolean",
                                        "nullable": false
                                      }
                                    },
                                    "required": [
                                      "token"
                                    ]
                                  }
                                },
                                "other": {
                                  "type": "object",
                                  "nullable": false,
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "nullable": true
                                    },
                                    "archived": {
                                      "type": "boolean",
                                      "nullable": true
                                    },
                                    "selected": {
                                      "type": "boolean",
                                      "nullable": false
                                    },
                                    "value": {
                                      "type": "string",
                                      "nullable": false,
                                      "maxLength": 255
                                    }
                                  }
                                },
                                "value": {
                                  "type": "string",
                                  "nullable": false
                                }
                              },
                              "required": [
                                "token"
                              ]
                            }
                          }
                        },
                        "required": [
                          "token",
                          "fields"
                        ]
                      }
                    }
                  }
                },
                "date_of_birth": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
                },
                "dva_card_number": {
                  "type": "string",
                  "pattern": "^[NVQSWT]([A-Z ][0-9]{1,6}|[A-Z]{2}[0-9]{1,5}|[A-Z]{3}[0-9]{1,4})[A-Z]?$",
                  "nullable": true
                },
                "email": {
                  "type": "string",
                  "pattern": "^[A-Z0-9!#$%&'*+/=?^_`{|}~.-]+@[A-Z0-9.-]+\\.[A-Z]{2,63}$",
                  "maxLength": 255,
                  "nullable": true
                },
                "emergency_contact": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "first_name": {
                  "type": "string",
                  "maxLength": 255
                },
                "gender_identity": {
                  "type": "string",
                  "nullable": true
                },
                "invoice_default_to": {
                  "type": "string",
                  "nullable": true
                },
                "invoice_email": {
                  "type": "string",
                  "pattern": "^[A-Z0-9!#$%&'*+/=?^_`{|}~.-]+@[A-Z0-9.-]+\\.[A-Z]{2,63}$",
                  "nullable": true
                },
                "invoice_extra_information": {
                  "type": "string",
                  "nullable": true
                },
                "last_name": {
                  "type": "string",
                  "maxLength": 255
                },
                "medicare": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "medicare_reference_number": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "occupation": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "old_reference_id": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "post_code": {
                  "type": "string",
                  "nullable": true
                },
                "preferred_first_name": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "pronouns": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "accusative": {
                      "type": "string",
                      "nullable": false
                    },
                    "nominative": {
                      "type": "string",
                      "nullable": false
                    },
                    "predicative_possessive": {
                      "type": "string",
                      "nullable": false
                    },
                    "pronominal_possessive": {
                      "type": "string",
                      "nullable": false
                    },
                    "reflexive": {
                      "type": "string",
                      "nullable": false
                    }
                  },
                  "required": [
                    "accusative",
                    "nominative",
                    "predicative_possessive",
                    "pronominal_possessive",
                    "reflexive"
                  ]
                },
                "receives_confirmation_emails": {
                  "type": "boolean",
                  "nullable": true
                },
                "referral_source": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "reminder_type": {
                  "type": "string",
                  "nullable": true,
                  "enum": [
                    "None",
                    "SMS",
                    "Email",
                    "SMS & Email"
                  ]
                },
                "sex": {
                  "type": "string",
                  "nullable": true
                },
                "state": {
                  "type": "string",
                  "nullable": true
                },
                "time_zone": {
                  "type": "string",
                  "description": "See: [supported time zone identifiers](/developer-portal/guides/time_zone_support/#accepted-values-for-time_zone_identifier)",
                  "example": "Australia/Melbourne",
                  "nullable": true
                },
                "title": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "unsubscribe_sms_marketing": {
                  "type": "boolean"
                },
                "referring_doctor_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "contact id",
                  "example": "1"
                },
                "patient_phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "phone_type": {
                        "type": "string",
                        "enum": [
                          "Fax",
                          "Home",
                          "Mobile",
                          "Other",
                          "Work"
                        ]
                      },
                      "number": {
                        "type": "string",
                        "format": "phone",
                        "example": "0-123-456-78"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PatientCase": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "closed": {
                  "type": "boolean",
                  "nullable": true
                },
                "contact_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "contact id",
                  "example": "1"
                },
                "expiry_date": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
                },
                "include_cancelled_attendees": {
                  "type": "boolean",
                  "nullable": true
                },
                "include_dna_attendees": {
                  "type": "boolean",
                  "nullable": true
                },
                "issue_date": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
                },
                "name": {
                  "type": "string"
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "max_invoiceable_amount": {
                  "type": "string",
                  "format": "decimal",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "nullable": true
                },
                "max_sessions": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 200,
                  "nullable": true
                },
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                },
                "referral": {
                  "type": "boolean",
                  "nullable": true
                },
                "referral_type": {
                  "type": "string",
                  "enum": [
                    "dva",
                    "medicare"
                  ],
                  "nullable": true
                },
                "attendee_ids": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": 1
                  }
                },
                "patient_attachment_ids": {
                  "type": "array",
                  "description": "Patient attachment ids",
                  "items": {
                    "type": "string",
                    "format": "int64",
                    "example": "1"
                  }
                }
              }
            }
          }
        }
      },
      "PatientForm": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "attendee_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "attendee id",
                  "example": "1"
                },
                "completed": {
                  "type": "boolean"
                },
                "email_to_patient_on_completion": {
                  "type": "boolean",
                  "nullable": true
                },
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                },
                "patient_form_template_id": {
                  "type": "string",
                  "format": "int64",
                  "example": "1"
                },
                "content": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "sections": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 255
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 10000
                          },
                          "questions": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "checkboxes",
                                    "date",
                                    "paragraph",
                                    "radiobuttons",
                                    "signature",
                                    "text"
                                  ]
                                },
                                "required": {
                                  "type": "boolean",
                                  "nullable": false
                                },
                                "signature_id": {
                                  "type": "string",
                                  "format": "int64",
                                  "example": "1",
                                  "nullable": false
                                },
                                "answer": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 10000
                                },
                                "answers": {
                                  "type": "array",
                                  "nullable": false,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "nullable": true,
                                        "maxLength": 255
                                      },
                                      "selected": {
                                        "type": "boolean",
                                        "nullable": true
                                      }
                                    }
                                  }
                                },
                                "other": {
                                  "type": "object",
                                  "nullable": false,
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "nullable": false
                                    },
                                    "selected": {
                                      "type": "boolean",
                                      "nullable": false
                                    },
                                    "value": {
                                      "type": "string",
                                      "nullable": false,
                                      "maxLength": 255
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "restricted_to_practitioner": {
                  "type": "boolean",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "PatientFormTemplate": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "sections": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 255
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 10000
                          },
                          "questions": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "checkboxes",
                                    "date",
                                    "paragraph",
                                    "radiobuttons",
                                    "signature",
                                    "text"
                                  ]
                                },
                                "required": {
                                  "type": "boolean",
                                  "nullable": false
                                },
                                "answer": {
                                  "type": "string",
                                  "nullable": false
                                },
                                "answers": {
                                  "type": "array",
                                  "nullable": false,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "nullable": true,
                                        "maxLength": 255
                                      }
                                    }
                                  }
                                },
                                "other": {
                                  "type": "object",
                                  "nullable": false,
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "nullable": false
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "email_to_patient_on_completion": {
                  "type": "boolean",
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "restricted_to_practitioner": {
                  "type": "boolean",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "PractitionerReferenceNumber": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true
                },
                "reference_number": {
                  "type": "string",
                  "nullable": true
                },
                "business_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "business id",
                  "example": "1"
                },
                "practitioner_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "practitioner id",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "Product": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "item_code": {
                  "type": "string",
                  "maxLength": 100,
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "serial_number": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "price": {
                  "type": "number",
                  "format": "decimal"
                },
                "product_supplier_name": {
                  "type": "string",
                  "nullable": true
                },
                "price_includes_tax": {
                  "type": "number",
                  "format": "decimal"
                },
                "tax_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "tax id",
                  "example": "1"
                },
                "cost_price": {
                  "type": "string",
                  "format": "decimal",
                  "minimum": 0,
                  "maximum": 4000000000,
                  "exclusiveMaximum": true,
                  "nullable": true
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "stock_level": {
                  "type": "integer",
                  "minimum": -4000000000,
                  "maximum": 4000000000,
                  "exclusiveMinimum": true,
                  "exclusiveMaximum": true,
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "ProductUpdate": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "item_code": {
                  "type": "string",
                  "maxLength": 100,
                  "nullable": true
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "serial_number": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "price": {
                  "type": "number",
                  "format": "decimal"
                },
                "product_supplier_name": {
                  "type": "string",
                  "nullable": true
                },
                "price_includes_tax": {
                  "type": "number",
                  "format": "decimal"
                },
                "tax_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "tax id",
                  "example": "1"
                },
                "cost_price": {
                  "type": "string",
                  "format": "decimal",
                  "minimum": 0,
                  "maximum": 4000000000,
                  "exclusiveMaximum": true,
                  "nullable": true
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "ReferralSource": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "referrer_id": {
                  "type": "string",
                  "format": "int64",
                  "example": "1"
                },
                "referral_source_type_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "referral source type id",
                  "example": "1"
                },
                "subcategory": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "StockAdjustment": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "integer",
                  "nullable": true,
                  "description": "A negative value is only allowed when a decreasing adjustment type has been selected and vice versa."
                },
                "adjustment_type": {
                  "type": "string",
                  "description": "The reason for modifying the stock level.\n\n**Increase types**: `Stock Purchase`, `Returned`, `Other`\n\n**Decrease types**: `Damaged`, `Out of Date`, `Item Sold`, `Other`\n",
                  "enum": [
                    "Stock Purchase",
                    "Returned",
                    "Other",
                    "Damaged",
                    "Out of Date",
                    "Item Sold"
                  ]
                },
                "comment": {
                  "type": "string",
                  "nullable": true
                },
                "product_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "The existing product you want to adjust the stock level of.",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "Tax": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 4000000000,
                  "exclusiveMaximum": true
                },
                "name": {
                  "type": "string"
                },
                "rate": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 4000000000,
                  "exclusiveMaximum": true
                }
              }
            }
          }
        }
      },
      "TreatmentNote": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "attendee_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "attendee id",
                  "example": "1"
                },
                "booking_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "booking id",
                  "example": "1"
                },
                "content": {
                  "type": "object",
                  "nullable": true,
                  "properties": {
                    "sections": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 255
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 10000
                          },
                          "questions": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "bodycharts",
                                    "checkboxes",
                                    "date",
                                    "paragraph",
                                    "radiobuttons",
                                    "text"
                                  ]
                                },
                                "answer": {
                                  "type": "string",
                                  "nullable": false
                                },
                                "answers": {
                                  "type": "array",
                                  "nullable": false,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "nullable": true,
                                        "maxLength": 255
                                      },
                                      "selected": {
                                        "type": "boolean",
                                        "nullable": true
                                      }
                                    }
                                  }
                                },
                                "other": {
                                  "type": "object",
                                  "nullable": false,
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "nullable": false
                                    },
                                    "selected": {
                                      "type": "boolean",
                                      "nullable": false
                                    },
                                    "value": {
                                      "type": "string",
                                      "nullable": false,
                                      "maxLength": 255
                                    }
                                  }
                                },
                                "body_chart_ids": {
                                  "type": "array",
                                  "nullable": false,
                                  "items": {
                                    "type": "string",
                                    "format": "int64",
                                    "example": "1"
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "draft": {
                  "type": "boolean",
                  "nullable": true
                },
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                },
                "title": {
                  "type": "string"
                },
                "treatment_note_template_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "treatment note template id",
                  "example": "1"
                }
              }
            }
          }
        }
      },
      "TreatmentNoteTemplate": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "sections": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 255
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 10000
                          },
                          "questions": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "nullable": false,
                                  "maxLength": 255
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "bodycharts",
                                    "checkboxes",
                                    "date",
                                    "paragraph",
                                    "radiobuttons",
                                    "text"
                                  ]
                                },
                                "answer": {
                                  "type": "string",
                                  "nullable": false
                                },
                                "answers": {
                                  "type": "array",
                                  "nullable": false,
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "nullable": true,
                                        "maxLength": 255
                                      }
                                    }
                                  }
                                },
                                "other": {
                                  "type": "object",
                                  "nullable": false,
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean",
                                      "nullable": false
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "type"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "print_settings": {
                  "type": "object",
                  "properties": {
                    "include_patient_address": {
                      "type": "boolean"
                    },
                    "include_patient_dob": {
                      "type": "boolean"
                    },
                    "include_patient_medicare": {
                      "type": "boolean"
                    },
                    "include_patient_occupation": {
                      "type": "boolean"
                    },
                    "include_patient_reference_number": {
                      "type": "boolean"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UnavailableBlock": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "business_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "business id",
                  "example": "1"
                },
                "ends_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "notes": {
                  "type": "string",
                  "nullable": true
                },
                "practitioner_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "practitioner id",
                  "example": "1"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "repeat_rule": {
                  "type": "object",
                  "properties": {
                    "number_of_repeats": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 51,
                      "exclusiveMinimum": true,
                      "nullable": true
                    },
                    "repeat_type": {
                      "type": "string",
                      "enum": [
                        "Daily",
                        "Monthly",
                        "Weekly"
                      ],
                      "nullable": true
                    },
                    "repeating_interval": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 100,
                      "exclusiveMinimum": true,
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "UploadedPatientAttachment": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "patient_id": {
                  "type": "string",
                  "format": "int64",
                  "description": "patient id",
                  "example": "1"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "nullable": true
                },
                "upload_url": {
                  "type": "string",
                  "description": "Must be a presigned URL returned by the [presigned URL upload process](/developer-portal/guides/uploading_patient_attachments/)",
                  "format": "uri",
                  "example": "https://cliniko-files-example-bucket.s3.amazonaws.com/123/patients/456/attachments/temp/s0m3-w31rd-l0c4t10n-1na-t3mpd1r/the-name-of-the-file.txt"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/appointment_types": {
      "get": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "List appointment types",
        "operationId": "ListAppointmentTypes-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "appointment_types": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentType"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| category | [string](/developer-portal/#string-filter-operators) |\n| online_payments_mode | [string](/developer-portal/#string-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n| appointment_confirmation_template_ids | [array](/developer-portal/#array-filter-operators) |\n| appointment_reminder_template_ids | [array](/developer-portal/#array-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "Create appointment type",
        "operationId": "CreateAppointmentType-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentType"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/AppointmentType"
        }
      }
    },
    "/appointment_types/{id}": {
      "get": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "Get appointment type",
        "operationId": "GetAppointmentType-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentType"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "Update appointment type",
        "operationId": "UpdateAppointmentType-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentType"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/AppointmentType"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "Archive appointment type",
        "operationId": "DeleteAppointmentType-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/appointment_types/{id}/archive": {
      "post": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "Archive appointment type",
        "operationId": "ArchiveAppointmentType-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/practitioners/{practitioner_id}/appointment_types": {
      "get": {
        "tags": [
          "Appointment Type"
        ],
        "summary": "List appointment types for practitioner",
        "operationId": "ListAppointmentTypesForPractitioner-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "appointment_types": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentType"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/appointment_types?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/appointment_types?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/appointment_types?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "practitioner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| category | [string](/developer-portal/#string-filter-operators) |\n| online_payments_mode | [string](/developer-portal/#string-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n| appointment_confirmation_template_ids | [array](/developer-portal/#array-filter-operators) |\n| appointment_reminder_template_ids | [array](/developer-portal/#array-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/attendees": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "List attendees",
        "operationId": "ListAttendees-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attendees": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attendee"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| booking_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_case_id | [int64](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Attendee"
        ],
        "summary": "Create attendee",
        "operationId": "CreateAttendee-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendee"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Attendee"
        }
      }
    },
    "/attendees/{id}": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "Get attendee",
        "operationId": "GetAttendee-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendee"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Attendee"
        ],
        "summary": "Update attendee",
        "operationId": "UpdateAttendee-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attendee"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/AttendeeUpdate"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Attendee"
        ],
        "summary": "Archive attendee",
        "operationId": "DeleteAttendee-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/attendees/{id}/archive": {
      "post": {
        "tags": [
          "Attendee"
        ],
        "summary": "Archive attendee",
        "operationId": "ArchiveAttendee-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/attendees/{id}/cancel": {
      "patch": {
        "tags": [
          "Attendee"
        ],
        "summary": "Cancel attendee",
        "operationId": "CancelAttendee-Patch",
        "responses": {
          "204": {
            "description": "Resource was cancelled"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/AttendeeCancel"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "description": "Only attendees of group appointments can be cancelled via this endpoint. Cancelling an individual appointment should be done via the [cancel endpoint for individual appointments](/openapi/reference/tag/Individual-Appointment/#tag/Individual-Appointment/operation/CancelIndividualAppointment-Patch)"
      }
    },
    "/group_appointments/{group_appointment_id}/attendees": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "List attendees for group appointment",
        "operationId": "ListAttendeesForGroupAppointment-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attendees": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attendee"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/group_appointments/1/attendees?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/group_appointments/1/attendees?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/group_appointments/1/attendees?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "group_appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| booking_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_case_id | [int64](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/individual_appointments/{individual_appointment_id}/attendees": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "List attendees for individual appointment",
        "operationId": "ListAttendeesForIndividualAppointment-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attendees": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attendee"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/individual_appointments/1/attendees?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/individual_appointments/1/attendees?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/individual_appointments/1/attendees?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "individual_appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| booking_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_case_id | [int64](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patient_cases/{patient_case_id}/attendees": {
      "get": {
        "tags": [
          "Attendee"
        ],
        "summary": "List attendees for patient case",
        "operationId": "ListAttendeesForPatientCase-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attendees": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Attendee"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/attendees?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/attendees?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/attendees?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| booking_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/availability_blocks": {
      "get": {
        "tags": [
          "Availability Block"
        ],
        "summary": "List availability blocks",
        "operationId": "ListAvailabilityBlocks-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "availability_blocks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AvailabilityBlock"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/availability_blocks?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/availability_blocks?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/availability_blocks?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| starts_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Availability Block"
        ],
        "summary": "Create availability block",
        "operationId": "CreateAvailabilityBlock-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityBlock"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/AvailabilityBlock"
        }
      }
    },
    "/availability_blocks/{id}": {
      "get": {
        "tags": [
          "Availability Block"
        ],
        "summary": "Get availability block",
        "operationId": "GetAvailabilityBlock-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityBlock"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/businesses/{business_id}/practitioners/{practitioner_id}/appointment_types/{appointment_type_id}/available_times": {
      "get": {
        "tags": [
          "Available Time"
        ],
        "summary": "Get all available times",
        "operationId": "GetAllAvailableTimes-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/1/appointment_types/1/available_times?from=2013-05-21&to=2013-05-22&page=2\""
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/1/appointment_types/1/available_times?from=2013-05-21&to=2013-05-22&page=1\""
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/1/appointment_types/1/available_times?from=2013-05-21&to=2013-05-22&page=3\""
                        }
                      }
                    },
                    "available_times": {
                      "items": {
                        "$ref": "#/components/schemas/AvailableTime"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "business_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          },
          {
            "name": "practitioner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          },
          {
            "name": "appointment_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          },
          {
            "name": "from",
            "description": "Cannot be more than 7 days before `to`. Cannot be older than the current date in the account's time zone.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "description": "Cannot be more than 7 days after `from`. Cannot be older than the current date in the account's time zone.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          }
        ],
        "description": "Find appointment start times that are currently available for the practitioner based on parameters provided."
      }
    },
    "/businesses/{business_id}/practitioners/{practitioner_id}/appointment_types/{appointment_type_id}/next_available_time": {
      "get": {
        "tags": [
          "Available Time"
        ],
        "summary": "Get next available time",
        "operationId": "GetNextAvailableTime-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/1/appointment_types/1/next_available_time"
                        }
                      }
                    },
                    "appointment_start": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "business_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          },
          {
            "name": "practitioner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          },
          {
            "name": "appointment_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          },
          {
            "name": "from",
            "description": "Cannot be more than 7 days before `to`. Cannot be older than the current date in the account's time zone.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "description": "Cannot be more than 7 days after `from`. Cannot be older than the current date in the account's time zone.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ]
      }
    },
    "/billable_items": {
      "get": {
        "tags": [
          "Billable Item"
        ],
        "summary": "List billable items",
        "operationId": "ListBillableItems-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "billable_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BillableItem"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/billable_items?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/billable_items?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/billable_items?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| tax_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Billable Item"
        ],
        "summary": "Create billable item",
        "operationId": "CreateBillableItem-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillableItem"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BillableItem"
        }
      }
    },
    "/billable_items/{id}": {
      "get": {
        "tags": [
          "Billable Item"
        ],
        "summary": "Get billable item",
        "operationId": "GetBillableItem-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillableItem"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Billable Item"
        ],
        "summary": "Update billable item",
        "operationId": "UpdateBillableItem-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillableItem"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BillableItem"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Billable Item"
        ],
        "summary": "Archive billable item",
        "operationId": "DeleteBillableItem-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/billable_items/{id}/archive": {
      "post": {
        "tags": [
          "Billable Item"
        ],
        "summary": "Archive billable item",
        "operationId": "ArchiveBillableItem-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/bookings": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "List bookings",
        "operationId": "ListBookings-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Booking"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/bookings?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/bookings?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/bookings?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_type_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| did_not_arrive | [boolean](/developer-portal/#boolean-filter-operators) |\n| ends_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_ids | [array](/developer-portal/#array-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| repeated_from_id | [int64](/developer-portal/#integer-filter-operators) |\n| starts_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/bookings/{id}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Get booking",
        "operationId": "GetBooking-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patient_cases/{patient_case_id}/bookings": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "List bookings for patient case",
        "operationId": "ListBookingsForPatientCase-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bookings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Booking"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/bookings?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/bookings?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/bookings?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_type_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| did_not_arrive | [boolean](/developer-portal/#boolean-filter-operators) |\n| ends_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_ids | [array](/developer-portal/#array-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| repeated_from_id | [int64](/developer-portal/#integer-filter-operators) |\n| starts_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/businesses": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "List businesses",
        "operationId": "ListBusinesses-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "businesses": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Business"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_type_ids | [array](/developer-portal/#array-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Create business",
        "operationId": "CreateBusiness-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/BusinessCreate"
        }
      }
    },
    "/businesses/{id}": {
      "get": {
        "tags": [
          "Business"
        ],
        "summary": "Get business",
        "operationId": "GetBusiness-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Business"
        ],
        "summary": "Update business",
        "operationId": "UpdateBusiness-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Business"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Business"
        ],
        "summary": "Archive business",
        "operationId": "DeleteBusiness-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/businesses/{id}/archive": {
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Archive business",
        "operationId": "ArchiveBusiness-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/businesses/{id}/unarchive": {
      "post": {
        "tags": [
          "Business"
        ],
        "summary": "Unarchive business",
        "operationId": "UnarchiveBusiness-Post",
        "responses": {
          "200": {
            "description": "Resource was unarchived",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/communications": {
      "get": {
        "tags": [
          "Communication"
        ],
        "summary": "List communications",
        "operationId": "ListCommunications-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "communications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Communication"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/communications?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/communications?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/communications?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| category_code | [integer](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Communication"
        ],
        "summary": "Create memo communication",
        "operationId": "CreateMemoCommunication-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoCommunication"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoCommunicationBody"
              }
            }
          }
        },
        "description": "Creating a memo with SMS or email as communication type will not send a communication.\n\nA memo just records that a communication has taken place.\n"
      }
    },
    "/communications/{id}": {
      "get": {
        "tags": [
          "Communication"
        ],
        "summary": "Get communication",
        "operationId": "GetCommunication-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Communication"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Communication"
        ],
        "summary": "Update memo communication",
        "operationId": "UpdateMemoCommunication-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoCommunication"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoCommunicationBody"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/communications/{id}/archive": {
      "post": {
        "tags": [
          "Communication"
        ],
        "summary": "Archive memo communication",
        "operationId": "ArchiveMemoCommunication-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/concession_types": {
      "get": {
        "tags": [
          "Concession Type"
        ],
        "summary": "List concession types",
        "operationId": "ListConcessionTypes-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "concession_types": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConcessionType"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/concession_types?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/concession_types?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/concession_types?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Concession Type"
        ],
        "summary": "Create concession type",
        "operationId": "CreateConcessionType-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcessionType"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ConcessionType"
        }
      }
    },
    "/concession_types/{id}": {
      "get": {
        "tags": [
          "Concession Type"
        ],
        "summary": "Get concession type",
        "operationId": "GetConcessionType-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcessionType"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Concession Type"
        ],
        "summary": "Update concession type",
        "operationId": "UpdateConcessionType-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcessionType"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ConcessionType"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "List contacts",
        "operationId": "ListContacts-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contacts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contact"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/contacts?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/contacts?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/contacts?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| email | [string](/developer-portal/#string-filter-operators) |\n| first_name | [string](/developer-portal/#string-filter-operators) |\n| last_name | [string](/developer-portal/#string-filter-operators) |\n| type_code | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Create contact",
        "operationId": "CreateContact-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Contact"
        }
      }
    },
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get contact",
        "operationId": "GetContact-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Contact"
        ],
        "summary": "Update contact",
        "operationId": "UpdateContact-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Contact"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Archive contact",
        "operationId": "DeleteContact-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/contacts/{id}/archive": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Archive contact",
        "operationId": "ArchiveContact-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/daily_availabilities": {
      "get": {
        "tags": [
          "Daily Availability"
        ],
        "summary": "List daily availabilities",
        "operationId": "ListDailyAvailabilities-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "daily_availabilities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyAvailability"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/daily_availabilities?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/daily_availabilities?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/daily_availabilities?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/daily_availabilities/{id}": {
      "get": {
        "tags": [
          "Daily Availability"
        ],
        "summary": "Get daily availability",
        "operationId": "GetDailyAvailability-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyAvailability"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/businesses/{business_id}/daily_availabilities": {
      "get": {
        "tags": [
          "Daily Availability"
        ],
        "summary": "List daily availabilities for business",
        "operationId": "ListDailyAvailabilitiesForBusiness-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "daily_availabilities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyAvailability"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/daily_availabilities?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/daily_availabilities?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/daily_availabilities?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "business_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/practitioners/{practitioner_id}/daily_availabilities": {
      "get": {
        "tags": [
          "Daily Availability"
        ],
        "summary": "List daily availabilities for practitioner",
        "operationId": "ListDailyAvailabilitiesForPractitioner-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "daily_availabilities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyAvailability"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/daily_availabilities?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/daily_availabilities?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/daily_availabilities?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "practitioner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/group_appointments": {
      "get": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "List group appointments",
        "operationId": "ListGroupAppointments-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group_appointments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GroupAppointment"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/group_appointments?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/group_appointments?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/group_appointments?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_type_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| ends_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_ids | [array](/developer-portal/#array-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| repeated_from_id | [int64](/developer-portal/#integer-filter-operators) |\n| starts_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "Create group appointment",
        "operationId": "CreateGroupAppointment-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAppointment"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/GroupAppointment"
        }
      }
    },
    "/group_appointments/{id}": {
      "get": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "Get group appointment",
        "operationId": "GetGroupAppointment-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAppointment"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "Update group appointment",
        "operationId": "UpdateGroupAppointment-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupAppointment"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/GroupAppointment"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "Archive group appointment",
        "operationId": "DeleteGroupAppointment-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/group_appointments/{id}/archive": {
      "post": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "Archive group appointment",
        "operationId": "ArchiveGroupAppointment-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/group_appointments/{id}/conflicts": {
      "get": {
        "tags": [
          "Group Appointment"
        ],
        "summary": "Get conflicts for a group appointment",
        "operationId": "GetGroupAppointmentConflicts-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conflicts": {
                      "type": "object",
                      "properties": {
                        "exist": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/individual_appointments": {
      "get": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "List individual appointments",
        "operationId": "ListIndividualAppointments-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "individual_appointments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IndividualAppointment"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/individual_appointments?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/individual_appointments?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/individual_appointments?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_type_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| ends_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| repeated_from_id | [int64](/developer-portal/#integer-filter-operators) |\n| starts_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Create individual appointment",
        "operationId": "CreateIndividualAppointment-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualAppointment"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/IndividualAppointment"
        }
      }
    },
    "/individual_appointments/{id}": {
      "get": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Get individual appointment",
        "operationId": "GetIndividualAppointment-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualAppointment"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| cancelled_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Update individual appointment",
        "operationId": "UpdateIndividualAppointment-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualAppointment"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/IndividualAppointment"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Archive individual appointment",
        "operationId": "DeleteIndividualAppointment-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/individual_appointments/{id}/archive": {
      "post": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Archive individual appointment",
        "operationId": "ArchiveIndividualAppointment-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/individual_appointments/{id}/cancel": {
      "patch": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Cancel individual appointment",
        "operationId": "CancelIndividualAppointment-Patch",
        "responses": {
          "204": {
            "description": "Resource was cancelled"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/IndividualAppointmentCancel"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/individual_appointments/{id}/conflicts": {
      "get": {
        "tags": [
          "Individual Appointment"
        ],
        "summary": "Get conflicts for an individual appointment",
        "operationId": "GetIndividualAppointmentConflicts-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conflicts": {
                      "type": "object",
                      "properties": {
                        "exist": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List invoices",
        "operationId": "ListInvoices-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoices?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoices?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoices?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| issue_date | [date](/developer-portal/#date-filter-operators) |\n| number | [integer](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| status | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice",
        "operationId": "GetInvoice-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/appointments/{appointment_id}/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List invoices for appointment",
        "operationId": "ListInvoicesForAppointment-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointments/1/invoices?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointments/1/invoices?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointments/1/invoices?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appointment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| issue_date | [date](/developer-portal/#date-filter-operators) |\n| number | [integer](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| status | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/attendees/{attendee_id}/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List invoices for attendee",
        "operationId": "ListInvoicesForAttendee-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees/1/invoices?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees/1/invoices?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees/1/invoices?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "attendee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| issue_date | [date](/developer-portal/#date-filter-operators) |\n| number | [integer](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| status | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patient_cases/{patient_case_id}/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List invoices for patient case",
        "operationId": "ListInvoicesForPatientCase-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/invoices?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/invoices?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/invoices?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| issue_date | [date](/developer-portal/#date-filter-operators) |\n| number | [integer](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| status | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patients/{patient_id}/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List invoices for patient",
        "operationId": "ListInvoicesForPatient-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/invoices?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/invoices?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/invoices?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| issue_date | [date](/developer-portal/#date-filter-operators) |\n| number | [integer](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| status | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/practitioners/{practitioner_id}/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List invoices for practitioner",
        "operationId": "ListInvoicesForPractitioner-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invoice"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/invoices?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/invoices?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/invoices?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "practitioner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| appointment_id | [int64](/developer-portal/#integer-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| issue_date | [date](/developer-portal/#date-filter-operators) |\n| number | [integer](/developer-portal/#integer-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| status | [integer](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/invoice_items": {
      "get": {
        "tags": [
          "Invoice Item"
        ],
        "summary": "List invoice items",
        "operationId": "ListInvoiceItems-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoice_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceItem"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoice_items?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoice_items?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoice_items?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| invoice_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/invoice_items/{id}": {
      "get": {
        "tags": [
          "Invoice Item"
        ],
        "summary": "Get invoice item",
        "operationId": "GetInvoiceItem-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItem"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/invoices/{invoice_id}/invoice_items": {
      "get": {
        "tags": [
          "Invoice Item"
        ],
        "summary": "List invoice items for invoice",
        "operationId": "ListInvoiceItemsForInvoice-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoice_items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InvoiceItem"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoices/1/invoice_items?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoices/1/invoice_items?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/invoices/1/invoice_items?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/medical_alerts": {
      "get": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "List medical alerts",
        "operationId": "ListMedicalAlerts-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "medical_alerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MedicalAlert"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/medical_alerts?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/medical_alerts?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/medical_alerts?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "Create medical alert",
        "operationId": "CreateMedicalAlert-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalAlert"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/MedicalAlert"
        }
      }
    },
    "/medical_alerts/{id}": {
      "get": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "Get medical alert",
        "operationId": "GetMedicalAlert-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalAlert"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "Update medical alert",
        "operationId": "UpdateMedicalAlert-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalAlert"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/MedicalAlert"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "Archive medical alert",
        "operationId": "DeleteMedicalAlert-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/medical_alerts/{id}/archive": {
      "post": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "Archive medical alert",
        "operationId": "ArchiveMedicalAlert-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patients/{patient_id}/medical_alerts": {
      "get": {
        "tags": [
          "Medical Alert"
        ],
        "summary": "List medical alerts for patient",
        "operationId": "ListMedicalAlertsForPatient-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "medical_alerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MedicalAlert"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/medical_alerts?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/medical_alerts?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/medical_alerts?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patients": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "List patients",
        "operationId": "ListPatients-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patients": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Patient"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| date_of_birth | [date](/developer-portal/#date-filter-operators) |\n| email | [string](/developer-portal/#string-filter-operators) |\n| first_name | [string](/developer-portal/#string-filter-operators) |\n| last_name | [string](/developer-portal/#string-filter-operators) |\n| old_reference_id | [string](/developer-portal/#string-filter-operators) |\n| preferred_first_name | [string](/developer-portal/#string-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Patient"
        ],
        "summary": "Create patient",
        "operationId": "CreatePatient-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Patient"
        }
      }
    },
    "/patients/{id}": {
      "get": {
        "tags": [
          "Patient"
        ],
        "summary": "Get patient",
        "operationId": "GetPatient-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Patient"
        ],
        "summary": "Update patient",
        "operationId": "UpdatePatient-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Patient"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Patient"
        ],
        "summary": "Archive patient",
        "operationId": "ArchivePatient-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/patients/{id}/archive": {
      "post": {
        "tags": [
          "Patient"
        ],
        "summary": "Archive patient",
        "operationId": "ArchivePatient-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patients/{id}/unarchive": {
      "post": {
        "tags": [
          "Patient"
        ],
        "summary": "Unarchive patient",
        "operationId": "UnarchivePatient-Post",
        "responses": {
          "200": {
            "description": "Resource was unarchived",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Patient"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patient_attachments": {
      "get": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "List patient attachments",
        "operationId": "ListPatientAttachments-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_attachments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientAttachment"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_attachments?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_attachments?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_attachments?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| content_type | [string](/developer-portal/#string-filter-operators) |\n| description | [string](/developer-portal/#string-filter-operators) |\n| filename | [string](/developer-portal/#string-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| processed_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| size | [integer](/developer-portal/#integer-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "Create uploaded patient attachment",
        "operationId": "CreateUploadedPatientAttachment-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadedPatientAttachment"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UploadedPatientAttachment"
        },
        "description": "To create a patient attachment, you must first [generate a presigned URL](/developer-portal/guides/uploading_patient_attachments/), upload your file to that URL, and then supply that URL and response key in the `upload_url` request body parameter.",
        "externalDocs": {
          "description": "Uploading patient attachments",
          "url": "/developer-portal/guides/uploading_patient_attachments/"
        }
      }
    },
    "/patient_attachments/{id}": {
      "get": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "Get patient attachment",
        "operationId": "GetPatientAttachment-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientAttachment"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "Archive patient attachment",
        "operationId": "DeletePatientAttachment-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/patient_attachments/{id}/archive": {
      "post": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "Archive patient attachment",
        "operationId": "ArchivePatientAttachment-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patient_cases/{patient_case_id}/patient_attachments": {
      "get": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "List patient attachments for patient case",
        "operationId": "ListPatientAttachmentsForPatientCase-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_attachments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientAttachment"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/patient_attachments?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/patient_attachments?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/1/patient_attachments?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_case_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| content_type | [string](/developer-portal/#string-filter-operators) |\n| description | [string](/developer-portal/#string-filter-operators) |\n| filename | [string](/developer-portal/#string-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| processed_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| size | [integer](/developer-portal/#integer-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patients/{patient_id}/attachment_presigned_post": {
      "get": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "Get a presigned URL to upload your file to S3",
        "operationId": "PresignedPost-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentPresignedPost"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": "1"
            }
          }
        ],
        "externalDocs": {
          "description": "Uploading patient attachments",
          "url": "/developer-portal/guides/uploading_patient_attachments/"
        }
      }
    },
    "/patients/{patient_id}/patient_attachments": {
      "get": {
        "tags": [
          "Patient Attachment"
        ],
        "summary": "List patient attachments for patient",
        "operationId": "ListPatientAttachmentsForPatient-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_attachments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientAttachment"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/patient_attachments?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/patient_attachments?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/patient_attachments?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| content_type | [string](/developer-portal/#string-filter-operators) |\n| description | [string](/developer-portal/#string-filter-operators) |\n| filename | [string](/developer-portal/#string-filter-operators) |\n| processed_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| size | [integer](/developer-portal/#integer-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patient_cases": {
      "get": {
        "tags": [
          "Patient Case"
        ],
        "summary": "List patient cases",
        "operationId": "ListPatientCases-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_cases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientCase"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| expiry_date | [date](/developer-portal/#date-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Patient Case"
        ],
        "summary": "Create patient case",
        "operationId": "CreatePatientCase-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientCase"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PatientCase"
        }
      }
    },
    "/patient_cases/active": {
      "get": {
        "tags": [
          "Patient Case"
        ],
        "summary": "List active patient cases",
        "operationId": "ListActivePatientCases-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_cases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientCase"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/active?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/active?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_cases/active?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| expiry_date | [date](/developer-portal/#date-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patient_cases/{id}": {
      "get": {
        "tags": [
          "Patient Case"
        ],
        "summary": "Get patient case",
        "operationId": "GetPatientCase-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientCase"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Patient Case"
        ],
        "summary": "Update patient case",
        "operationId": "UpdatePatientCase-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientCase"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PatientCase"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patient_cases/{id}/archive": {
      "post": {
        "tags": [
          "Patient Case"
        ],
        "summary": "Archive patient case",
        "operationId": "ArchivePatientCase-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patient_forms": {
      "get": {
        "tags": [
          "Patient Form"
        ],
        "summary": "List patient forms",
        "operationId": "ListPatientForms-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_forms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientForm"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_forms?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_forms?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_forms?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| attendee_id | [int64](/developer-portal/#integer-filter-operators) |\n| completed_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Patient Form"
        ],
        "summary": "Create patient form",
        "operationId": "CreatePatientForm-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientForm"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PatientForm"
        },
        "description": "When creating a patient form with a `patient_form_template_id`, the values for `name`, `content`, and `restricted_to_practitioner` will be pulled from the template. However, you may provide any of those values to override the template, or even provide all of your own values and exclude the `patient_form_template_id` altogether."
      }
    },
    "/patient_forms/{id}": {
      "get": {
        "tags": [
          "Patient Form"
        ],
        "summary": "Get patient form",
        "operationId": "GetPatientForm-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientForm"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Patient Form"
        ],
        "summary": "Update patient form",
        "operationId": "UpdatePatientForm-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientForm"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PatientForm"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/attendees/{attendee_id}/patient_forms": {
      "get": {
        "tags": [
          "Patient Form"
        ],
        "summary": "List patient forms for attendee",
        "operationId": "ListPatientFormsForAttendee-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_forms": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientForm"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees/1/patient_forms?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees/1/patient_forms?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/attendees/1/patient_forms?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "attendee_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| completed_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patient_forms/{id}/archive": {
      "post": {
        "tags": [
          "Patient Form"
        ],
        "summary": "Archive patient form",
        "operationId": "ArchivePatientForm-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patient_form_templates": {
      "get": {
        "tags": [
          "Patient Form Template"
        ],
        "summary": "List patient form templates",
        "operationId": "ListPatientFormTemplates-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patient_form_templates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PatientFormTemplate"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_form_templates?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_form_templates?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patient_form_templates?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Patient Form Template"
        ],
        "summary": "Create patient form template",
        "operationId": "CreatePatientFormTemplate-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientFormTemplate"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PatientFormTemplate"
        }
      }
    },
    "/patient_form_templates/{id}": {
      "get": {
        "tags": [
          "Patient Form Template"
        ],
        "summary": "Get patient form template",
        "operationId": "GetPatientFormTemplate-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientFormTemplate"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Patient Form Template"
        ],
        "summary": "Update patient form template",
        "operationId": "UpdatePatientFormTemplate-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientFormTemplate"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PatientFormTemplate"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/patient_form_templates/{id}/archive": {
      "post": {
        "tags": [
          "Patient Form Template"
        ],
        "summary": "Archive patient form template",
        "operationId": "ArchivePatientFormTemplate-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/practitioners": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "List practitioners",
        "operationId": "ListPractitioners-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Practitioner"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/practitioners/inactive": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "List inactive practitioners",
        "operationId": "ListInactivePractitioners-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Practitioner"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/inactive?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/inactive?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/inactive?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/practitioners/{id}": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "Get practitioner",
        "operationId": "GetPractitioner-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Practitioner"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/appointment_types/{appointment_type_id}/practitioners": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "List practitioners for appointment type",
        "operationId": "ListPractitionersForAppointmentType-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Practitioner"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appointment_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/businesses/{business_id}/practitioners": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "List practitioners for business",
        "operationId": "ListPractitionersForBusiness-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Practitioner"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "business_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/appointment_types/{appointment_type_id}/practitioners/inactive": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "List inactive practitioners for appointment type",
        "operationId": "ListInactivePractitionersForAppointmentType-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Practitioner"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners/inactive?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners/inactive?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/appointment_types/1/practitioners/inactive?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "appointment_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/businesses/{business_id}/practitioners/inactive": {
      "get": {
        "tags": [
          "Practitioner"
        ],
        "summary": "List inactive practitioners for business",
        "operationId": "ListInactivePractitionersForBusiness-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Practitioner"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/inactive?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/inactive?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/practitioners/inactive?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "business_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| user_id | [int64](/developer-portal/#integer-filter-operators) |\n| show_in_online_bookings | [boolean](/developer-portal/#boolean-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/practitioner_reference_numbers": {
      "get": {
        "tags": [
          "Practitioner Reference Number"
        ],
        "summary": "List practitioner reference numbers",
        "operationId": "ListPractitionerReferenceNumbers-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioner_reference_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PractitionerReferenceNumber"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioner_reference_numbers?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioner_reference_numbers?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioner_reference_numbers?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| reference_number | [string](/developer-portal/#string-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Practitioner Reference Number"
        ],
        "summary": "Create practitioner reference number",
        "operationId": "CreatePractitionerReferenceNumber-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PractitionerReferenceNumber"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PractitionerReferenceNumber"
        }
      }
    },
    "/practitioner_reference_numbers/{id}": {
      "get": {
        "tags": [
          "Practitioner Reference Number"
        ],
        "summary": "Get practitioner reference number",
        "operationId": "GetPractitionerReferenceNumber-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PractitionerReferenceNumber"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Practitioner Reference Number"
        ],
        "summary": "Update practitioner reference number",
        "operationId": "UpdatePractitionerReferenceNumber-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PractitionerReferenceNumber"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/PractitionerReferenceNumber"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Practitioner Reference Number"
        ],
        "summary": "Delete practitioner reference number",
        "operationId": "DeletePractitionerReferenceNumber-Delete",
        "responses": {
          "204": {
            "description": "Resource was deleted successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/practitioners/{practitioner_id}/practitioner_reference_numbers": {
      "get": {
        "tags": [
          "Practitioner Reference Number"
        ],
        "summary": "List practitioner reference numbers for practitioner",
        "operationId": "ListPractitionerReferenceNumbersForPractitioner-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "practitioner_reference_numbers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PractitionerReferenceNumber"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/practitioner_reference_numbers?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/practitioner_reference_numbers?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/practitioners/1/practitioner_reference_numbers?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "practitioner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| reference_number | [string](/developer-portal/#string-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List products",
        "operationId": "ListProducts-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/products?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/products?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/products?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| name | [string](/developer-portal/#string-filter-operators) |\n| tax_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create product",
        "operationId": "CreateProduct-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Product"
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product",
        "operationId": "GetProduct-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Update product",
        "operationId": "UpdateProduct-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductUpdate"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Archive product",
        "operationId": "DeleteProduct-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/products/{id}/archive": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Archive product",
        "operationId": "ArchiveProduct-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/settings/public": {
      "get": {
        "tags": [
          "Public Settings"
        ],
        "summary": "Get public settings",
        "operationId": "GetPublicSettings-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicSettings"
                }
              }
            }
          }
        }
      }
    },
    "/referral_sources": {
      "get": {
        "tags": [
          "Referral Source"
        ],
        "summary": "List referral sources",
        "operationId": "ListReferralSources-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "referral_sources": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReferralSource"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/referral_sources?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/referral_sources?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/referral_sources?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/patients/{patient_id}/referral_source": {
      "get": {
        "tags": [
          "Referral Source"
        ],
        "summary": "Get referral source",
        "operationId": "GetReferralSource-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralSource"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Referral Source"
        ],
        "summary": "Update referral source",
        "operationId": "UpdateReferralSource-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralSource"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/ReferralSource"
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/referral_source_types": {
      "get": {
        "tags": [
          "Referral Source Type"
        ],
        "summary": "List referral source types",
        "operationId": "ListReferralSourceTypes-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "referral_source_types": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReferralSourceType"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/referral_source_types?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/referral_source_types?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/referral_source_types?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/referral_source_types/{id}": {
      "get": {
        "tags": [
          "Referral Source Type"
        ],
        "summary": "Get referral source type",
        "operationId": "GetReferralSourceType-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferralSourceType"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "List services",
        "operationId": "ListServices-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Service"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/services?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/services?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/services?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          }
        ]
      }
    },
    "/businesses/{business_id}/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "List services for business",
        "operationId": "ListServicesForBusiness-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Service"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/services?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/services?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/businesses/1/services?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "business_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          }
        ]
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "Get settings",
        "operationId": "GetSettings-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            }
          }
        },
        "description": "This endpoint is only accessible to users with a role that can view settings."
      }
    },
    "/patient_forms/{patient_form_id}/signatures/{id}": {
      "get": {
        "tags": [
          "Signature"
        ],
        "summary": "Get signature",
        "operationId": "GetSignature-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Signature"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_form_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/stock_adjustments": {
      "get": {
        "tags": [
          "Stock Adjustment"
        ],
        "summary": "List stock adjustments",
        "operationId": "ListStockAdjustments-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stock_adjustments": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StockAdjustment"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/stock_adjustments?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/stock_adjustments?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/stock_adjustments?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| product_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Stock Adjustment"
        ],
        "summary": "Create stock adjustment",
        "operationId": "CreateStockAdjustment-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockAdjustment"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/StockAdjustment"
        }
      }
    },
    "/stock_adjustments/{id}": {
      "get": {
        "tags": [
          "Stock Adjustment"
        ],
        "summary": "Get stock adjustment",
        "operationId": "GetStockAdjustment-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockAdjustment"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/taxes": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "List taxes",
        "operationId": "ListTaxes-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "taxes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tax"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/taxes?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/taxes?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/taxes?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Tax"
        ],
        "summary": "Create tax",
        "operationId": "CreateTax-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Tax"
        }
      }
    },
    "/taxes/{id}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Get tax",
        "operationId": "GetTax-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Tax"
        ],
        "summary": "Update tax",
        "operationId": "UpdateTax-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tax"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/Tax"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Delete tax",
        "operationId": "DeleteTax-Delete",
        "responses": {
          "204": {
            "description": "Resource was deleted successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/treatment_notes": {
      "get": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "List treatment notes",
        "operationId": "ListTreatmentNotes-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "treatment_notes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TreatmentNote"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/treatment_notes?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/treatment_notes?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/treatment_notes?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| attendee_id | [int64](/developer-portal/#integer-filter-operators) |\n| booking_id | [int64](/developer-portal/#integer-filter-operators) |\n| draft | [boolean](/developer-portal/#boolean-filter-operators) |\n| patient_id | [int64](/developer-portal/#integer-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| treatment_note_template_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "Create treatment note",
        "operationId": "CreateTreatmentNote-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentNote"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/TreatmentNote"
        }
      }
    },
    "/treatment_notes/{id}": {
      "get": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "Get treatment note",
        "operationId": "GetTreatmentNote-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentNote"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "Update treatment note",
        "operationId": "UpdateTreatmentNote-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentNote"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/TreatmentNote"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "Archive treatment note",
        "operationId": "DeleteTreatmentNote-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/patients/{patient_id}/treatment_notes": {
      "get": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "List treatment notes for patient",
        "operationId": "ListTreatmentNotesForPatient-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "treatment_notes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TreatmentNote"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/treatment_notes?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/treatment_notes?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/patients/1/treatment_notes?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| attendee_id | [int64](/developer-portal/#integer-filter-operators) |\n| booking_id | [int64](/developer-portal/#integer-filter-operators) |\n| draft | [boolean](/developer-portal/#boolean-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| treatment_note_template_id | [int64](/developer-portal/#integer-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/treatment_notes/{id}/archive": {
      "post": {
        "tags": [
          "Treatment Note"
        ],
        "summary": "Archive treatment note",
        "operationId": "ArchiveTreatmentNote-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/treatment_note_templates": {
      "get": {
        "tags": [
          "Treatment Note Template"
        ],
        "summary": "List treatment note templates",
        "operationId": "ListTreatmentNoteTemplates-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "treatment_note_templates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TreatmentNoteTemplate"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/treatment_note_templates?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/treatment_note_templates?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/treatment_note_templates?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Treatment Note Template"
        ],
        "summary": "Create treatment note template",
        "operationId": "CreateTreatmentNoteTemplate-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentNoteTemplate"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/TreatmentNoteTemplate"
        }
      }
    },
    "/treatment_note_templates/{id}": {
      "get": {
        "tags": [
          "Treatment Note Template"
        ],
        "summary": "Get treatment note template",
        "operationId": "GetTreatmentNoteTemplate-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentNoteTemplate"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Treatment Note Template"
        ],
        "summary": "Update treatment note template",
        "operationId": "UpdateTreatmentNoteTemplate-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TreatmentNoteTemplate"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/TreatmentNoteTemplate"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Treatment Note Template"
        ],
        "summary": "Archive treatment note template",
        "operationId": "DeleteTreatmentNoteTemplate-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/treatment_note_templates/{id}/archive": {
      "post": {
        "tags": [
          "Treatment Note Template"
        ],
        "summary": "Archive treatment note template",
        "operationId": "ArchiveTreatmentNoteTemplate-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/unavailable_blocks": {
      "get": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "List unavailable blocks",
        "operationId": "ListUnavailableBlocks-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unavailable_blocks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnavailableBlock"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/unavailable_blocks?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/unavailable_blocks?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/unavailable_blocks?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| business_id | [int64](/developer-portal/#integer-filter-operators) |\n| ends_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| practitioner_id | [int64](/developer-portal/#integer-filter-operators) |\n| repeated_from_id | [int64](/developer-portal/#integer-filter-operators) |\n| starts_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "post": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "Create unavailable block",
        "operationId": "CreateUnavailableBlock-Post",
        "responses": {
          "201": {
            "description": "Resource was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnavailableBlock"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UnavailableBlock"
        }
      }
    },
    "/unavailable_blocks/{id}": {
      "get": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "Get unavailable block",
        "operationId": "GetUnavailableBlock-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnavailableBlock"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| archived_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| deleted_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      },
      "patch": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "Update unavailable block",
        "operationId": "UpdateUnavailableBlock-Patch",
        "responses": {
          "200": {
            "description": "Resource was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnavailableBlock"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/UnavailableBlock"
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "Archive unavailable block",
        "operationId": "DeleteUnavailableBlock-Delete",
        "responses": {
          "204": {
            "description": "Resource was archived successfully"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ],
        "deprecated": true
      }
    },
    "/unavailable_blocks/{id}/archive": {
      "post": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "Archive unavailable block",
        "operationId": "ArchiveUnavailableBlock-Post",
        "responses": {
          "204": {
            "description": "Resource was archived"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/unavailable_blocks/{id}/conflicts": {
      "get": {
        "tags": [
          "Unavailable Block"
        ],
        "summary": "Get conflicts for an unavailable block",
        "operationId": "GetUnavailableBlockConflicts-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conflicts": {
                      "type": "object",
                      "properties": {
                        "exist": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get authenticated user",
        "operationId": "GetAuthenticatedUser-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List users",
        "operationId": "ListUsers-Get",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "total_entries": {
                      "type": "integer",
                      "example": 1
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/users?page=2"
                        },
                        "previous": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/users?page=1"
                        },
                        "next": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.au1.cliniko.com/v1/users?page=3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Sort"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "in": "query",
            "name": "q[]",
            "description": "Filter result by one or more fields.\n\nSee [Filtering Results](/developer-portal#filtering-results)\n\nAvailable filters:\n\n| Value | Format |\n|---|---|\n| id | [int64](/developer-portal/#integer-filter-operators) |\n| created_at | [date-time](/developer-portal/#datetime-filter-operators) |\n| updated_at | [date-time](/developer-portal/#datetime-filter-operators) |\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user",
        "operationId": "GetUser-Get",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64"
            }
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Appointment Type"
    },
    {
      "name": "Attendee"
    },
    {
      "name": "Availability Block"
    },
    {
      "name": "Available Time",
      "description": "Cliniko users can configure how available times are displayed in our online bookings module.\n\nThe API endpoints that retrieve available times will respect these settings.  The settings are:\n\n### Maximum number of appointments per day segment\n\nDay parts are morning (before Midday), afternoon (Midday to 5pm) and evening (5pm onwards).\n\nPossible settings are: 1, 2, 3, 4, 5 or unlimited.\n\n### Minimum advance time required for online bookings\n\nThis is the minimum amount of time from now that a available time will be shown.\n\nPossible settings are: Now, 1 Hour, 2 Hours, 4 Hours, Tomorrow or 2 Days.\n\n### How far ahead bookings are offered\n\nThis limits how far in the future available times are offered.\n\nPossible settings are: 28 days, 84 days, 182 days or 365 days\n\n### Business to be displayed in online bookings\n\nSetting to choose which businesses can be displayed in our online bookings module.\n\nThe API will not return available times for businesses not enabled for online bookings.\n\n### Appointment Type to be displayed in online bookings\n\nSetting to choose which appointment types can be displayed in our online bookings module.\n\nThe API will not return available times for appointment types not enabled for online bookings.\n\n### Practitioner to be displayed in online bookings\n\nSetting to choose which practitioners can be displayed in our online bookings module.\n\nThe API will not return available times for practitioners not enabled for online bookings.\n"
    },
    {
      "name": "Billable Item"
    },
    {
      "name": "Booking"
    },
    {
      "name": "Business",
      "description": "Businesses represent a business or location (e.g. a clinic). Each Cliniko account can have unlimited businesses.\n\nThese are typically used for each physical location if there is more than one. Most Cliniko accounts have just one\nbusiness.\n"
    },
    {
      "name": "Communication"
    },
    {
      "name": "Concession Type"
    },
    {
      "name": "Contact"
    },
    {
      "name": "Daily Availability",
      "description": "The regularly scheduled availabilities of a practitioner at a business"
    },
    {
      "name": "Group Appointment"
    },
    {
      "name": "Individual Appointment"
    },
    {
      "name": "Invoice"
    },
    {
      "name": "Invoice Item"
    },
    {
      "name": "Medical Alert"
    },
    {
      "name": "Patient",
      "description": "Patients are the people that book in for appointments. There isn't much in Cliniko that doesn't revolve around\npatients.\n\nWhen you're working with patient information, make sure you abide by the relevant regulations for security and\nprivacy.\n\nA couple of fields in the patient record deserve special consideration:\n\n`accepted_privacy_policy` stores the patient's consent to the business's own privacy policy. Values can be null\n(no response), true (accepted) or false (rejected). Please consider how this may affect you storing information\non this patient.\n\n`time_zone` will contain a valid IANA time zone identifier if the patient's time zone has been set, or null if it\nhasn't. It can be set via the API, in which case it accepts IANA time zone identifiers.\n"
    },
    {
      "name": "Patient Attachment"
    },
    {
      "name": "Patient Case"
    },
    {
      "name": "Patient Form",
      "description": "HTML is supported in answers to paragraph questions. We sanitize these answers to ensure the HTML is safe\nand our editor can support the formatting.\n\nCurrently, the following tags are supported: `p`, `div`, `br`, `ul`, `ol`, `li`, `blockquote`, `h1`, `h2`,  `b`, `i`, `u`, and `a`.\n\nThe angle bracket characters (`<`, and `>`) should be sent as html encodings (ex: `<` should be sent as `&lt;`).\n\nContent inside unescaped angle brackets could be indentified as unsupported HTML and will be stripped.\n"
    },
    {
      "name": "Patient Form Template"
    },
    {
      "name": "Practitioner",
      "description": "All practitioners have an associated user account. Not all users are practitioners (e.g. receptionists wouldn't be).\n\nYou can only create appointments for practitioners (not for users).\n"
    },
    {
      "name": "Practitioner Reference Number"
    },
    {
      "name": "Product"
    },
    {
      "name": "Public Settings"
    },
    {
      "name": "Referral Source",
      "description": "Referral source of a patient"
    },
    {
      "name": "Referral Source Type",
      "description": "Types of referrals for patients"
    },
    {
      "name": "Service"
    },
    {
      "name": "Settings"
    },
    {
      "name": "Signature"
    },
    {
      "name": "Stock Adjustment"
    },
    {
      "name": "Tax"
    },
    {
      "name": "Treatment Note",
      "description": "Notes taken about a patient visit.\n\nHTML is supported in answers to paragraph questions. We sanitize these answers to ensure the HTML is safe\nand our editor can support the formatting.\n\nCurrently, the following tags are supported: `p`, `div`, `br`, `ul`, `ol`, `li`, `blockquote`, `h1`, `h2`,  `b`, `i`, `u`, and `a`.\n\nThe angle bracket characters (`<`, and `>`) should be sent as html encodings (ex: `<` should be sent as `&lt;`).\n\nContent inside unescaped angle brackets could be indentified as unsupported HTML and will be stripped.\n"
    },
    {
      "name": "Treatment Note Template",
      "description": "Templates that are the starting point for treatment notes.\n\nHTML is supported in answers to paragraph questions. We sanitize these answers to ensure the HTML is safe\nand our editor can support the formatting.\n\nCurrently, the following tags are supported: `p`, `div`, `br`, `ul`, `ol`, `li`, `blockquote`, `h1`, `h2`,  `b`, `i`, `u`, and `a`.\n\nThe angle bracket characters (`<`, and `>`) should be sent as html encodings (ex: `<` should be sent as `&lt;`).\n\nContent inside unescaped angle brackets could be indentified as unsupported HTML and will be stripped.\n"
    },
    {
      "name": "Unavailable Block"
    },
    {
      "name": "User"
    }
  ]
}